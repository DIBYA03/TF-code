openapi: 3.0.1
info:
  title: ${api_name}
  description: ${api_name} ${api_version}
  version: ${api_version}
servers:
- url: https://${domain_name}/${api_version}
  description: ${server_description}
- url: https://${domain_name}/${api_stage}
  description: ${server_description}
paths:
  /banking/business/{businessId}/contact/{contactId}/linkedaccount:
    post:
      tags:
      - Business Contact Linked Account
      description: Create Linked Account for Business Contact
      operationId: CreateBusinessContactLinkedAccount
      parameters:
      - name: businessId
        in: path
        description: Business id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        description: Contact id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactLinkedAccountCreate"
        required: true
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkedBankAccount"
        404:
          description: Not Found
          content: {}
      security:
      - WiseUsersSandboxTestingPoolAuthorizer: []
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        connectionType: INTERNET
        uri: ${banking_business_contact_linkedaccount_lambda}
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        responses:
          default:
            statusCode: 200
        responseTemplates:
          application/json: |
            {}
    get:
      tags:
      - Business Contact Linked Account
      description: Get Linked Accounts for Business Contact
      operationId: GetBusinessContactLinkedAccounts
      parameters:
      - name: offset
        in: query
        description: Offset of items to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: Max number of item to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: businessId
        in: path
        description: Business id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        description: Contact id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LinkedBankAccount"
        404:
          description: Not Found
          content: {}
      security:
      - WiseUsersSandboxTestingPoolAuthorizer: []
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        connectionType: INTERNET
        uri: ${banking_business_contact_linkedaccount_lambda}
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        responses:
          default:
            statusCode: 200
        responseTemplates:
          application/json: |
            {}
    options:
      tags:
      - Business Contact Linked Account
      parameters:
      - name: businessId
        in: path
        description: Business id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        description: Contact id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token,Access-Control-Allow-Origin'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
  /banking/business/{businessId}/contact/{contactId}/linkedaccount/{accountId}:
    get:
      tags:
      - Business Contact Linked Account
      description: Get Specific Linked Account for Business Contact
      operationId: GetBusinessContactLinkedAccount
      parameters:
      - name: businessId
        in: path
        description: Business id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        description: Contact id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: path
        description: Account id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkedBankAccount"
        404:
          description: Not Found
          content: {}
      security:
      - WiseUsersSandboxTestingPoolAuthorizer: []
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        connectionType: INTERNET
        uri: ${banking_business_contact_linkedaccount_lambda}
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        responses:
          default:
            statusCode: 200
        responseTemplates:
          application/json: |
            {}
    delete:
      tags:
        - Business Contact Linked Account
      description: Delete Specific Linked Account for Business Contact
      operationId: DeleteBusinessContactLinkedAccount
      parameters:
        - name: businessId
          in: path
          description: Business id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: contactId
          in: path
          description: Contact id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: accountId
          in: path
          description: Account id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: "#/components/headers/X-Requested-With"
            Access-Control-Allow-Headers:
              $ref: "#/components/headers/Access-Control-Allow-Headers"
            Access-Control-Allow-Methods:
              $ref: "#/components/headers/Access-Control-Allow-Methods"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content: {}
        404:
          description: Not Found
          content: {}
      security:
        - WiseUsersSandboxTestingPoolAuthorizer: []
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        connectionType: INTERNET
        uri: ${banking_business_contact_linkedaccount_lambda}
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        responses:
          default:
            statusCode: 200
        responseTemplates:
          application/json: |
            {}
    options:
      tags:
      - Business Contact Linked Account
      parameters:
      - name: businessId
        in: path
        description: Business id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contactId
        in: path
        description: Contact id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: path
        description: Account id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token,Access-Control-Allow-Origin'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
components:
  schemas:
    LinkedAccountPermission:
      title: Linked Account Permission
      type: string
      description: Permission  Enum
      enum:
        - sendOnly
        - receiveOnly
        - sendAndReceive
    AccountType:
      title: Account Type
      type: string
      description: Account Type  Enum
      enum:
        - checking
        - savings
    ContactLinkedAccountCreate:
      title: Linked Account Create
      type: object
      description: Linked Account Create
      properties:
        accountHolderName:
          type: string
        accountType:
          $ref: "#/components/schemas/AccountType"
        accountNumber:
          type: string
        routingNumber:
          type: string
        currency:
          type: string
        permission:
          $ref: "#/components/schemas/LinkedAccountPermission"
    LinkedBankAccount:
      title: Linked Bank Account
      type: object
      description: Linked Bank Account
      properties:
        id:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        businessId:
          type: string
          nullable: true
        businessBankAccountId:
          type: string
          nullable: true
        contactId:
          type: string
          nullable: true
        registeredAccountId:
          type: string
          nullable: true
        registeredBankName:
          type: string
          nullable: true
        sourceAccountId:
          type: string
          nullable: true
        accountHolderName:
          type: string
        accountName:
          type: string
          nullable: true
        accountNumberMasked:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        accountType:
          $ref: "#/components/schemas/AccountType"
        routingNumber:
          type: string
        wireRouting:
          type: string
          nullable: true
        sourceId:
          type: string
          nullable: true
        sourceName:
          type: string
          nullable: true
        permission:
          $ref: "#/components/schemas/LinkedAccountPermission"
        alias:
          type: string
          nullable: true
        verified:
          type: boolean
          nullable: true
        created:
          type: string
          description: Date created
          example: YYYY-MM-DDTHH:MM:SSZ or YYYY-MM-DDTHH:MM:SS.SSSZ
        modified:
          type: string
          description: Date modified
          example: YYYY-MM-DDTHH:MM:SSZ or YYYY-MM-DDTHH:MM:SS.SSSZ
  headers:
    X-Requested-With:
      description: CORS origin sites allowed
      style: simple
      explode: false
      schema:
        type: string
    Access-Control-Allow-Origin:
      description: CORS origin sites allowed
      style: simple
      explode: false
      schema:
        type: string
    Access-Control-Allow-Methods:
      description: CORS http methods allows
      style: simple
      explode: false
      schema:
        type: string
    Access-Control-Allow-Headers:
      description: CORS request headers allowed
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    WiseUsersSandboxTestingPoolAuthorizer:
      type: apiKey
      description: Cognito Auth Server
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        providerARNs:
        - ${cognito_pool_arn}
        type: cognito_user_pools
