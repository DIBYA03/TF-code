openapi: 3.0.1

paths:
  /banking/business/{businessId}/transaction/{transactionId}/receipt:
    post:
      tags:
        - Business Transaction Receipt
      description: Upload Business Transaction Receipt
      operationId: UploadBusinessTransactionReceipt
      parameters:
        - name: businessId
          in: path
          description: Business id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReceiptPostBody"
        required: true
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: "#/components/headers/X-Requested-With"
            Access-Control-Allow-Headers:
              $ref: "#/components/headers/Access-Control-Allow-Headers"
            Access-Control-Allow-Methods:
              $ref: "#/components/headers/Access-Control-Allow-Methods"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Receipt"
        400:
          description: Bad Request
          content: {}
      security:
        - WiseCognitoPoolAuthorizer: []
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        connectionType: INTERNET
        uri: ${banking_business_transaction_receipt_lambda}
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        responses:
          default:
            statusCode: 200
        responseTemplates:
          application/json: |
            {}
    options:
      tags:
        - Business Transaction Receipt
      operationId: OptionsBusinessTransactionReceipt
      parameters:
        - name: businessId
          in: path
          description: Business id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: 200 response
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
  /banking/business/{businessId}/transaction/{transactionId}/receipt/{receiptId}:
    get:
      tags:
        - Business Transaction Receipt
      description: Get Receipt by id
      operationId: GetTransactionReceiptById
      parameters:
        - name: businessId
          in: path
          description: Business id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: receiptId
          in: path
          description: Receipt id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: "#/components/headers/X-Requested-With"
            Access-Control-Allow-Headers:
              $ref: "#/components/headers/Access-Control-Allow-Headers"
            Access-Control-Allow-Methods:
              $ref: "#/components/headers/Access-Control-Allow-Methods"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Receipt"
        400:
          description: Bad Request
          content: {}
      security:
        - WiseCognitoPoolAuthorizer: []
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        connectionType: INTERNET
        uri: ${banking_business_transaction_receipt_lambda}
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        responses:
          default:
            statusCode: 200
        responseTemplates:
          application/json: |
            {}
    delete:
      tags:
        - Business Transaction Receipt
      description: Delete Receipt by id
      operationId: DeleteTransactionReceiptById
      parameters:
        - name: businessId
          in: path
          description: Business id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: receiptId
          in: path
          description: Receipt id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: "#/components/headers/X-Requested-With"
            Access-Control-Allow-Headers:
              $ref: "#/components/headers/Access-Control-Allow-Headers"
            Access-Control-Allow-Methods:
              $ref: "#/components/headers/Access-Control-Allow-Methods"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content: {}
        400:
          description: Bad Request
          content: {}
      security:
        - WiseCognitoPoolAuthorizer: []
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        connectionType: INTERNET
        uri: ${banking_business_transaction_receipt_lambda}
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        responses:
          default:
            statusCode: 200
        responseTemplates:
          application/json: |
            {}
    options:
      tags:
        - Business Transaction Receipt
      operationId: OptionsTransactionReceiptById
      parameters:
        - name: businessId
          in: path
          description: Business id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: receiptId
          in: path
          description: Receipt id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: 200 response
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
  /banking/business/{businessId}/transaction/{transactionId}/receipt/{receiptId}/signedurl:
    get:
      tags:
        - Business Transaction Receipt
      description: Get Receipt Signed Url
      operationId: GetReceiptSignedUrl
      parameters:
        - name: businessId
          in: path
          description: Business id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: receiptId
          in: path
          description: Receipt id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: "#/components/headers/X-Requested-With"
            Access-Control-Allow-Headers:
              $ref: "#/components/headers/Access-Control-Allow-Headers"
            Access-Control-Allow-Methods:
              $ref: "#/components/headers/Access-Control-Allow-Methods"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReceiptSignedUrl"
        400:
          description: Bad Request
          content: {}
      security:
        - WiseCognitoPoolAuthorizer: []
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        connectionType: INTERNET
        uri: ${banking_business_transaction_receipt_signedurl_lambda}
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        responses:
          default:
            statusCode: 200
        responseTemplates:
          application/json: |
            {}
    options:
      tags:
        - Business Transaction Receipt
      operationId: OptionsReceiptSignedUrl
      parameters:
        - name: businessId
          in: path
          description: Business id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: receiptId
          in: path
          description: Receipt id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: 200 response
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
components:
  schemas:
    ReceiptPostBody:
      title: ReceiptPostBody
      type: object
      properties:
        contentType:
          type: string
        content:
          type: string
    Receipt:
      title: Receipt
      type: object
      properties:
        id:
          type: string
        transactionId:
          type: string
        createdUserId:
          type: string
        businessId:
          type: string
        contentType:
          type: string
        content:
          type: string
        storageKey:
          type: string
        created:
          type: string
          description: Date created
          example: YYYY-MM-DDTHH:MM:SSZ or YYYY-MM-DDTHH:MM:SS.SSSZ
        modified:
          type: string
          description: Date modified
          example: YYYY-MM-DDTHH:MM:SSZ or YYYY-MM-DDTHH:MM:SS.SSSZ
    ReceiptSignedUrl:
      title: ReceiptSignedUrl
      type: object
      properties:
        url:
          type: string
