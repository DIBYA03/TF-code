openapi: 3.0.1

paths:
  /banking/business/{businessId}/account:
    get:
      tags:
      - Business Bank Accounts
      description: Get multiple business bank accounts
      operationId: GetMultipleBusinessBankAccounts
      parameters:
      - name: businessId
        in: path
        description: Business id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Max number of item to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Offset of items to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessBankAccount'
        400:
          description: Bad Request
          content: {}
      x-amazon-apigateway-integration:
        connectionType: INTERNET
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responseTemplates:
          application/json: |
            {}
        responses:
          default:
            statusCode: 200
        type: aws_proxy
        uri: ${banking_business_account_lambda}
      security:
      - WiseCognitoPoolAuthorizer: []
    post:
      tags:
      - Business Bank Accounts
      description: Create business bank account
      operationId: CreateBusinessBankAccount
      parameters:
      - name: businessId
        in: path
        description: Business id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessBankAccountPostBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessBankAccount'
        400:
          description: Bad Request
          content: {}
      x-amazon-apigateway-integration:
        connectionType: INTERNET
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responseTemplates:
          application/json: |
            {}
        responses:
          default:
            statusCode: 200
        type: aws_proxy
        uri: ${banking_business_account_lambda}
      security:
      - WiseCognitoPoolAuthorizer: []
    options:
      tags:
      - Business Bank Accounts
      operationId: OptionsMultipleBusinessBankAccounts
      parameters:
      - name: businessId
        in: path
        description: Business id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: 200 response
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
  /banking/business/{businessId}/account/{accountId}:
    get:
      tags:
      - Business Bank Accounts
      description: Get business bank account
      operationId: GetBusinessBankAccount
      parameters:
      - name: businessId
        in: path
        description: Business id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: path
        description: Business account id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessBankAccount'
        400:
          description: Bad Request
          content: {}
      x-amazon-apigateway-integration:
        connectionType: INTERNET
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responseTemplates:
          application/json: |
            {}
        responses:
          default:
            statusCode: 200
        type: aws_proxy
        uri: ${banking_business_account_lambda}
      security:
      - WiseCognitoPoolAuthorizer: []
    delete:
      tags:
      - Business Bank Accounts
      description: Close business bank account
      operationId: CloseBusinessBankAccount
      parameters:
      - name: businessId
        in: path
        description: User id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: path
        description: Business account id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Bad Request
          content: {}
      x-amazon-apigateway-integration:
        connectionType: INTERNET
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responseTemplates:
          application/json: |
            {}
        responses:
          default:
            statusCode: 200
        type: aws_proxy
        uri: ${banking_business_account_lambda}
      security:
      - WiseCognitoPoolAuthorizer: []
    options:
      tags:
      - Business Bank Accounts
      operationId: OptionsBusinessBankAccount
      parameters:
      - name: businessId
        in: path
        description: User id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: path
        description: Consumer account id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: 200 response
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
    patch:
      tags:
      - Business Bank Accounts
      description: Update business bank account
      operationId: UpdateBusinessBankAccount
      parameters:
      - name: businessId
        in: path
        description: Business id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: path
        description: Business account id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessBankAccountPatchBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessBankAccount'
        400:
          description: Bad Request
          content: {}
      x-amazon-apigateway-integration:
        connectionType: INTERNET
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responseTemplates:
          application/json: |
            {}
        responses:
          default:
            statusCode: 200
        type: aws_proxy
        uri: ${business_lambda}
      security:
      - WiseCognitoPoolAuthorizer: []
  /banking/business/{businessId}/account/{accountId}/balance:
    get:
      tags:
      - Get Business Bank Account Balance
      description: Get business bank account
      operationId: GetBusinessBankAccountBalance
      parameters:
      - name: businessId
        in: path
        description: Business id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: path
        description: Business account id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessBankAccountBalance'
        400:
          description: Bad Request
          content: {}
      x-amazon-apigateway-integration:
        connectionType: INTERNET
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responseTemplates:
          application/json: |
            {}
        responses:
          default:
            statusCode: 200
        type: aws_proxy
        uri: ${banking_business_account_balance_lambda}
      security:
      - WiseCognitoPoolAuthorizer: []
    options:
      tags:
      - Business Bank Accounts
      operationId: OptionsBusinessBankAccountBalance
      parameters:
      - name: businessId
        in: path
        description: User id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountId
        in: path
        description: Consumer account id number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: 200 response
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
components:
  schemas:
    PartnerBankName:
      title: PartnerBankName
      type: string
      description: Partner Bank Name Enum
      enum:
      - bbva
    Currency:
      title: Currency Type Enum
      type: string
      description: Currency Types
      enum:
      - usd
    AccountType:
      title: Account Type Enum
      type: string
      description: Account Types
      enum:
      - checking
      - savings
    AccountStatus:
      title: Account Status Enum
      type: string
      description: Account Status Types
      enum:
      - active
      - blocked
      - locked
      - closePending
      - closed
      - dormant
      - abandoned
      - escheated
      - chargeOff
    BusinessBankAccount:
      title: Business Bank Account Object
      type: object
      properties:
        id:
          type: string
          description: Bank account id
        partnerBankName:
          $ref: '#/components/schemas/PartnerBankName'
        accountHolderId:
          type: string
          description: Account holder user id
        businessId:
          type: string
          description: Business id
        accountType:
          $ref: '#/components/schemas/AccountType'
        accountStatus:
          $ref: '#/components/schemas/AccountStatus'
        accountNumberMasked:
          type: string
          description: Account number
        routingNumber:
          type: string
          description: ACH routing number
        alias:
          type: string
          description: Account alias
        availableBalance:
          type: number
          description: Available balance
          format: float64
        postedBalance:
          type: number
          description: Posted balance
          format: float64
        currency:
          $ref: '#/components/schemas/Currency'
        opened:
          type: string
          description: Date opened
          example: ISO8601 date time format e.g. YYYY-MM-DDTHH:MM:SSZ or YYYY-MM-DDTHH:MM:SS.SSSZ
        created:
          type: string
          description: Date created
          example: ISO8601 date time format e.g. YYYY-MM-DDTHH:MM:SSZ or YYYY-MM-DDTHH:MM:SS.SSSZ
        modified:
          type: string
          description: Date modified
          example: ISO8601 date time format e.g. YYYY-MM-DDTHH:MM:SSZ or YYYY-MM-DDTHH:MM:SS.SSSZ
      description: Business Bank Account Object
      readOnly: true
    BusinessBankAccountPostBody:
      title: Business Bank Account Post Body Object
      type: object
      properties:
        accountType:
          $ref: '#/components/schemas/AccountType'
        alias:
          type: string
          description: Account alias
        currency:
          $ref: '#/components/schemas/Currency'
      description: Business Bank Account Post Body Object
      writeOnly: true
    BusinessBankAccountPatchBody:
      title: Business Bank Account Patch Body Object
      type: object
      properties:
        alias:
          type: string
          description: Account alias
      description: Business Bank Account Patch Body Object
      writeOnly: true
    BusinessBankAccountBalance:
      title: Business Bank Account Balance Object
      type: object
      description: Business Bank Account Balance Object
      readOnly: true
      properties:
        accountId:
          type: string
          description: Bank account id
        availableBalance:
          type: number
          description: Available balance
          format: float64
        postedBalance:
          type: number
          description: Posted balance
          format: float64
        currency:
          $ref: '#/components/schemas/Currency'
        modified:
          type: string
          description: Date modified
          example: ISO8601 date time format e.g. YYYY-MM-DDTHH:MM:SSZ or YYYY-MM-DDTHH:MM:SS.SSSZ
