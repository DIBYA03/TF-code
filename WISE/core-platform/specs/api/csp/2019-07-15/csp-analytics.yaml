openapi: 3.0.1
info:
  title: ${api_name}
  description: ${api_name} ${api_version}
  version: ${api_version}
servers:
  - url: https://${domain_name}/${api_version}
    description: ${server_description}
  - url: https://${domain_name}/${api_stage}
    description: ${server_description}
paths:
  /analytics:
    get:
      description: Get Analytics
      operationId: GetAnalytics
      tags:
        - Analytics
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: "#/components/headers/X-Requested-With"
            Access-Control-Allow-Headers:
              $ref: "#/components/headers/Access-Control-Allow-Headers"
            Access-Control-Allow-Methods:
              $ref: "#/components/headers/Access-Control-Allow-Methods"
            Access-Control-Allow-Origin:
              $ref: "#/components/headers/Access-Control-Allow-Origin"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analytics"
        400:
          description: Bad Request
          content: {}
        404: 
          description: Not Found
          content: {}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        connectionType: INTERNET
        uri: ${analytics_lambda}
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        responses:
          default:
            statusCode: 200
        responseTemplates:
          application/json: |
            {}
      security:
      - api_key: []
    options:
      tags:
      - Analytics
      responses:
        200:
          description: OK
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token,Access-Control-Allow-Origin'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
components:
  schemas:
    Analytics:
      title: Metrics
      type: object
      properties:
        businesses:
          type: integer
          description: The number of active businesses
        cards:
          type: integer
          description: The number of activated business debit cards
        contacts:
          type: integer
          description: The number of active contacts
      readOnly: true
      description: Wise analytics
  headers:
      X-Requested-With:
        description: CORS origin sites allowed
        style: simple
        explode: false
        schema:
          type: string
      Access-Control-Allow-Origin:
        description: CORS origin sites allowed
        style: simple
        explode: false
        schema:
          type: string
      Access-Control-Allow-Methods:
        description: CORS http methods allows
        style: simple
        explode: false
        schema:
          type: string
      Access-Control-Allow-Headers:
        description: CORS request headers allowed
        style: simple
        explode: false
        schema:
          type: string       
  securitySchemes:
    api_key:
      in: header
      name: x-api-key
      type: apiKey
    
