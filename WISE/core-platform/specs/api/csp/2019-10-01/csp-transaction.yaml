openapi: 3.0.1
info:
  title: ${api_name}
  description: ${api_name} ${api_version}
  version: ${api_version}
servers:
  - url: https://${domain_name}/${api_version}
    description: ${server_description}
  - url: https://${domain_name}/${api_stage}
    description: ${server_description}
paths:
  /transaction/{transactionId}/approve:
    post:
      tags:
      - Review Business Transaction
      description: Approve a business transaction
      operationId: ApproveBusinessTransaction
      parameters:
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Bad Request
          content: {}
      x-amazon-apigateway-integration:
        connectionType: INTERNET
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responseTemplates:
          application/json: |
            {}
        responses:
          default:
            statusCode: 200
        type: aws_proxy
        uri: ${csp_transaction_approve_lambda}
      security:
      - WiseCSPCognitoPoolAuthorizer: []
    options:
      tags:
      - Review Business Transaction
      operationId: OptionsApproveBusinessTransaction
      responses:
        200:
          description: 200 response
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
  /transaction/{transactionId}/decline:
    post:
      tags:
      - Review Business Transaction
      description: Decline a business transaction
      operationId: DeclineBusinessTransaction
      parameters:
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Bad Request
          content: {}
      x-amazon-apigateway-integration:
        connectionType: INTERNET
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responseTemplates:
          application/json: |
            {}
        responses:
          default:
            statusCode: 200
        type: aws_proxy
        uri: ${csp_transaction_decline_lambda}
      security:
      - WiseCSPCognitoPoolAuthorizer: []
    options:
      tags:
      - Review Business Transaction
      operationId: OptionsApproveBusinessTransaction
      responses:
        200:
          description: 200 response
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
  /transaction/{transactionId}/transfer:
    get:
      tags:
        - Business Transaction Transfer Details
      description: Get business transaction transfer details
      operationId: GetBusinessTransactionTransfer
      parameters:
        - name: transactionId
          in: path
          description: Transaction id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionTransfer"
        400:
          description: Bad Request
          content: {}
      x-amazon-apigateway-integration:
        connectionType: INTERNET
        contentHandling: CONVERT_TO_TEXT
        httpMethod: POST
        passthroughBehavior: when_no_match
        responseTemplates:
          application/json: |
            {}
        responses:
          default:
            statusCode: 200
        type: aws_proxy
        uri: ${csp_transaction_transfer_lambda}
      security:
        - WiseCSPCognitoPoolAuthorizer: []
    options:
      tags:
        - Business Transaction Transfer Details
      operationId: OptionsBusinessTransactionTransfer
      responses:
        200:
          description: 200 response
          headers:
            X-Requested-With:
              $ref: '#/components/headers/X-Requested-With'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Access-Control-Allow-Methods:
              $ref: '#/components/headers/Access-Control-Allow-Methods'
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/Access-Control-Allow-Headers'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE, GET, OPTIONS, PATCH, POST'''
              method.response.header.X-Requested-With: '''*'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock

        components:
schemas:
  TransactionTransfer:
    title: Transaction transfer Object
    type: object
    properties:
      id:
        type: string
      consumerId:
        type: string
      businessId:
        type: string
      contactId:
        type: string
      eventThreadId:
        type: string
      monthlyInterestId:
        type: string
      paymentRequestId:
        type: string
      partnerName:
        type: string
      partnerTransferId:
        type: string
      sourceAccountId:
        type: string
      sourceType:
        type: string
      destAccountId:
        type: string
      destType:
        type: string
      amount:
        type: string
      currency:
        type: string
      notes:
        type: string
      sendEmail:
        type: bool
      postedCreditTransactionId:
        type: string
      postedDebitTransactionId:
        type: string
      transferStatus:
        type: string
      transferType:
        type: string
      created:
        type: timestamp
      failures:
        type: array
        items:
          type: string
      partnerTransferStatus:
        type: string
      errorCause:
        type: string
    description: Transaction transfer Object    
    readOnly: true
