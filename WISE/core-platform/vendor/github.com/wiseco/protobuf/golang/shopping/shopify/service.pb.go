// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: shopping/shopify/service.proto

package shopify

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_shopping_shopify_service_proto protoreflect.FileDescriptor

var file_shopping_shopify_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x69,
	0x66, 0x79, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79,
	0x1a, 0x1f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x69,
	0x66, 0x79, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x70,
	0x69, 0x66, 0x79, 0x2f, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x69,
	0x66, 0x79, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xc0,
	0x07, 0x0a, 0x16, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x18, 0x41, 0x64,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x36, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x77, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x12, 0x34, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69,
	0x66, 0x79, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42,
	0x79, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x44, 0x12, 0x38, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69,
	0x66, 0x79, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66,
	0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x44, 0x12, 0x38, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x8b, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x50,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x39, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x7b,
	0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66,
	0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x77, 0x69, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x69, 0x66, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x77, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f,
	0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_shopping_shopify_service_proto_goTypes = []interface{}{
	(*ShopifyBusinessRequest)(nil),    // 0: wise.protobuf.shopping.shopify.ShopifyBusinessRequest
	(*ShopifyPayoutRequest)(nil),      // 1: wise.protobuf.shopping.shopify.ShopifyPayoutRequest
	(*ShopifyBusinessIDRequest)(nil),  // 2: wise.protobuf.shopping.shopify.ShopifyBusinessIDRequest
	(*ShopifyTransactionRequest)(nil), // 3: wise.protobuf.shopping.shopify.ShopifyTransactionRequest
	(*ActivateRequest)(nil),           // 4: wise.protobuf.shopping.shopify.ActivateRequest
	(*UpdateOrderPaymentRequest)(nil), // 5: wise.protobuf.shopping.shopify.UpdateOrderPaymentRequest
	(*ShopifyBusiness)(nil),           // 6: wise.protobuf.shopping.shopify.ShopifyBusiness
	(*ShopifyPayout)(nil),             // 7: wise.protobuf.shopping.shopify.ShopifyPayout
	(*ShopifyOrder)(nil),              // 8: wise.protobuf.shopping.shopify.ShopifyOrder
}
var file_shopping_shopify_service_proto_depIdxs = []int32{
	0, // 0: wise.protobuf.shopping.shopify.ShopifyBusinessService.AddUpdateShopifyBusiness:input_type -> wise.protobuf.shopping.shopify.ShopifyBusinessRequest
	1, // 1: wise.protobuf.shopping.shopify.ShopifyBusinessService.AddShopifyPayout:input_type -> wise.protobuf.shopping.shopify.ShopifyPayoutRequest
	2, // 2: wise.protobuf.shopping.shopify.ShopifyBusinessService.GetShopifyBusinessByShopID:input_type -> wise.protobuf.shopping.shopify.ShopifyBusinessIDRequest
	2, // 3: wise.protobuf.shopping.shopify.ShopifyBusinessService.GetShopifyBusinessByBusinessID:input_type -> wise.protobuf.shopping.shopify.ShopifyBusinessIDRequest
	3, // 4: wise.protobuf.shopping.shopify.ShopifyBusinessService.GetShopifyPayoutByTransactionID:input_type -> wise.protobuf.shopping.shopify.ShopifyTransactionRequest
	4, // 5: wise.protobuf.shopping.shopify.ShopifyBusinessService.ActivateShopifyBusiness:input_type -> wise.protobuf.shopping.shopify.ActivateRequest
	5, // 6: wise.protobuf.shopping.shopify.ShopifyBusinessService.UpdateOrderPaymentStatus:input_type -> wise.protobuf.shopping.shopify.UpdateOrderPaymentRequest
	6, // 7: wise.protobuf.shopping.shopify.ShopifyBusinessService.AddUpdateShopifyBusiness:output_type -> wise.protobuf.shopping.shopify.ShopifyBusiness
	7, // 8: wise.protobuf.shopping.shopify.ShopifyBusinessService.AddShopifyPayout:output_type -> wise.protobuf.shopping.shopify.ShopifyPayout
	6, // 9: wise.protobuf.shopping.shopify.ShopifyBusinessService.GetShopifyBusinessByShopID:output_type -> wise.protobuf.shopping.shopify.ShopifyBusiness
	6, // 10: wise.protobuf.shopping.shopify.ShopifyBusinessService.GetShopifyBusinessByBusinessID:output_type -> wise.protobuf.shopping.shopify.ShopifyBusiness
	7, // 11: wise.protobuf.shopping.shopify.ShopifyBusinessService.GetShopifyPayoutByTransactionID:output_type -> wise.protobuf.shopping.shopify.ShopifyPayout
	6, // 12: wise.protobuf.shopping.shopify.ShopifyBusinessService.ActivateShopifyBusiness:output_type -> wise.protobuf.shopping.shopify.ShopifyBusiness
	8, // 13: wise.protobuf.shopping.shopify.ShopifyBusinessService.UpdateOrderPaymentStatus:output_type -> wise.protobuf.shopping.shopify.ShopifyOrder
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_shopping_shopify_service_proto_init() }
func file_shopping_shopify_service_proto_init() {
	if File_shopping_shopify_service_proto != nil {
		return
	}
	file_shopping_shopify_business_proto_init()
	file_shopping_shopify_payout_proto_init()
	file_shopping_shopify_order_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shopping_shopify_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shopping_shopify_service_proto_goTypes,
		DependencyIndexes: file_shopping_shopify_service_proto_depIdxs,
	}.Build()
	File_shopping_shopify_service_proto = out.File
	file_shopping_shopify_service_proto_rawDesc = nil
	file_shopping_shopify_service_proto_goTypes = nil
	file_shopping_shopify_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ShopifyBusinessServiceClient is the client API for ShopifyBusinessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShopifyBusinessServiceClient interface {
	AddUpdateShopifyBusiness(ctx context.Context, in *ShopifyBusinessRequest, opts ...grpc.CallOption) (*ShopifyBusiness, error)
	AddShopifyPayout(ctx context.Context, in *ShopifyPayoutRequest, opts ...grpc.CallOption) (*ShopifyPayout, error)
	GetShopifyBusinessByShopID(ctx context.Context, in *ShopifyBusinessIDRequest, opts ...grpc.CallOption) (*ShopifyBusiness, error)
	GetShopifyBusinessByBusinessID(ctx context.Context, in *ShopifyBusinessIDRequest, opts ...grpc.CallOption) (*ShopifyBusiness, error)
	GetShopifyPayoutByTransactionID(ctx context.Context, in *ShopifyTransactionRequest, opts ...grpc.CallOption) (*ShopifyPayout, error)
	ActivateShopifyBusiness(ctx context.Context, in *ActivateRequest, opts ...grpc.CallOption) (*ShopifyBusiness, error)
	UpdateOrderPaymentStatus(ctx context.Context, in *UpdateOrderPaymentRequest, opts ...grpc.CallOption) (*ShopifyOrder, error)
}

type shopifyBusinessServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShopifyBusinessServiceClient(cc grpc.ClientConnInterface) ShopifyBusinessServiceClient {
	return &shopifyBusinessServiceClient{cc}
}

func (c *shopifyBusinessServiceClient) AddUpdateShopifyBusiness(ctx context.Context, in *ShopifyBusinessRequest, opts ...grpc.CallOption) (*ShopifyBusiness, error) {
	out := new(ShopifyBusiness)
	err := c.cc.Invoke(ctx, "/wise.protobuf.shopping.shopify.ShopifyBusinessService/AddUpdateShopifyBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopifyBusinessServiceClient) AddShopifyPayout(ctx context.Context, in *ShopifyPayoutRequest, opts ...grpc.CallOption) (*ShopifyPayout, error) {
	out := new(ShopifyPayout)
	err := c.cc.Invoke(ctx, "/wise.protobuf.shopping.shopify.ShopifyBusinessService/AddShopifyPayout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopifyBusinessServiceClient) GetShopifyBusinessByShopID(ctx context.Context, in *ShopifyBusinessIDRequest, opts ...grpc.CallOption) (*ShopifyBusiness, error) {
	out := new(ShopifyBusiness)
	err := c.cc.Invoke(ctx, "/wise.protobuf.shopping.shopify.ShopifyBusinessService/GetShopifyBusinessByShopID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopifyBusinessServiceClient) GetShopifyBusinessByBusinessID(ctx context.Context, in *ShopifyBusinessIDRequest, opts ...grpc.CallOption) (*ShopifyBusiness, error) {
	out := new(ShopifyBusiness)
	err := c.cc.Invoke(ctx, "/wise.protobuf.shopping.shopify.ShopifyBusinessService/GetShopifyBusinessByBusinessID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopifyBusinessServiceClient) GetShopifyPayoutByTransactionID(ctx context.Context, in *ShopifyTransactionRequest, opts ...grpc.CallOption) (*ShopifyPayout, error) {
	out := new(ShopifyPayout)
	err := c.cc.Invoke(ctx, "/wise.protobuf.shopping.shopify.ShopifyBusinessService/GetShopifyPayoutByTransactionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopifyBusinessServiceClient) ActivateShopifyBusiness(ctx context.Context, in *ActivateRequest, opts ...grpc.CallOption) (*ShopifyBusiness, error) {
	out := new(ShopifyBusiness)
	err := c.cc.Invoke(ctx, "/wise.protobuf.shopping.shopify.ShopifyBusinessService/ActivateShopifyBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopifyBusinessServiceClient) UpdateOrderPaymentStatus(ctx context.Context, in *UpdateOrderPaymentRequest, opts ...grpc.CallOption) (*ShopifyOrder, error) {
	out := new(ShopifyOrder)
	err := c.cc.Invoke(ctx, "/wise.protobuf.shopping.shopify.ShopifyBusinessService/UpdateOrderPaymentStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShopifyBusinessServiceServer is the server API for ShopifyBusinessService service.
type ShopifyBusinessServiceServer interface {
	AddUpdateShopifyBusiness(context.Context, *ShopifyBusinessRequest) (*ShopifyBusiness, error)
	AddShopifyPayout(context.Context, *ShopifyPayoutRequest) (*ShopifyPayout, error)
	GetShopifyBusinessByShopID(context.Context, *ShopifyBusinessIDRequest) (*ShopifyBusiness, error)
	GetShopifyBusinessByBusinessID(context.Context, *ShopifyBusinessIDRequest) (*ShopifyBusiness, error)
	GetShopifyPayoutByTransactionID(context.Context, *ShopifyTransactionRequest) (*ShopifyPayout, error)
	ActivateShopifyBusiness(context.Context, *ActivateRequest) (*ShopifyBusiness, error)
	UpdateOrderPaymentStatus(context.Context, *UpdateOrderPaymentRequest) (*ShopifyOrder, error)
}

// UnimplementedShopifyBusinessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShopifyBusinessServiceServer struct {
}

func (*UnimplementedShopifyBusinessServiceServer) AddUpdateShopifyBusiness(context.Context, *ShopifyBusinessRequest) (*ShopifyBusiness, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUpdateShopifyBusiness not implemented")
}
func (*UnimplementedShopifyBusinessServiceServer) AddShopifyPayout(context.Context, *ShopifyPayoutRequest) (*ShopifyPayout, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddShopifyPayout not implemented")
}
func (*UnimplementedShopifyBusinessServiceServer) GetShopifyBusinessByShopID(context.Context, *ShopifyBusinessIDRequest) (*ShopifyBusiness, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopifyBusinessByShopID not implemented")
}
func (*UnimplementedShopifyBusinessServiceServer) GetShopifyBusinessByBusinessID(context.Context, *ShopifyBusinessIDRequest) (*ShopifyBusiness, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopifyBusinessByBusinessID not implemented")
}
func (*UnimplementedShopifyBusinessServiceServer) GetShopifyPayoutByTransactionID(context.Context, *ShopifyTransactionRequest) (*ShopifyPayout, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopifyPayoutByTransactionID not implemented")
}
func (*UnimplementedShopifyBusinessServiceServer) ActivateShopifyBusiness(context.Context, *ActivateRequest) (*ShopifyBusiness, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateShopifyBusiness not implemented")
}
func (*UnimplementedShopifyBusinessServiceServer) UpdateOrderPaymentStatus(context.Context, *UpdateOrderPaymentRequest) (*ShopifyOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrderPaymentStatus not implemented")
}

func RegisterShopifyBusinessServiceServer(s *grpc.Server, srv ShopifyBusinessServiceServer) {
	s.RegisterService(&_ShopifyBusinessService_serviceDesc, srv)
}

func _ShopifyBusinessService_AddUpdateShopifyBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopifyBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopifyBusinessServiceServer).AddUpdateShopifyBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.shopping.shopify.ShopifyBusinessService/AddUpdateShopifyBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopifyBusinessServiceServer).AddUpdateShopifyBusiness(ctx, req.(*ShopifyBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopifyBusinessService_AddShopifyPayout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopifyPayoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopifyBusinessServiceServer).AddShopifyPayout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.shopping.shopify.ShopifyBusinessService/AddShopifyPayout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopifyBusinessServiceServer).AddShopifyPayout(ctx, req.(*ShopifyPayoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopifyBusinessService_GetShopifyBusinessByShopID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopifyBusinessIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopifyBusinessServiceServer).GetShopifyBusinessByShopID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.shopping.shopify.ShopifyBusinessService/GetShopifyBusinessByShopID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopifyBusinessServiceServer).GetShopifyBusinessByShopID(ctx, req.(*ShopifyBusinessIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopifyBusinessService_GetShopifyBusinessByBusinessID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopifyBusinessIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopifyBusinessServiceServer).GetShopifyBusinessByBusinessID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.shopping.shopify.ShopifyBusinessService/GetShopifyBusinessByBusinessID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopifyBusinessServiceServer).GetShopifyBusinessByBusinessID(ctx, req.(*ShopifyBusinessIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopifyBusinessService_GetShopifyPayoutByTransactionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopifyTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopifyBusinessServiceServer).GetShopifyPayoutByTransactionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.shopping.shopify.ShopifyBusinessService/GetShopifyPayoutByTransactionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopifyBusinessServiceServer).GetShopifyPayoutByTransactionID(ctx, req.(*ShopifyTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopifyBusinessService_ActivateShopifyBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopifyBusinessServiceServer).ActivateShopifyBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.shopping.shopify.ShopifyBusinessService/ActivateShopifyBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopifyBusinessServiceServer).ActivateShopifyBusiness(ctx, req.(*ActivateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopifyBusinessService_UpdateOrderPaymentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopifyBusinessServiceServer).UpdateOrderPaymentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.shopping.shopify.ShopifyBusinessService/UpdateOrderPaymentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopifyBusinessServiceServer).UpdateOrderPaymentStatus(ctx, req.(*UpdateOrderPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShopifyBusinessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wise.protobuf.shopping.shopify.ShopifyBusinessService",
	HandlerType: (*ShopifyBusinessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUpdateShopifyBusiness",
			Handler:    _ShopifyBusinessService_AddUpdateShopifyBusiness_Handler,
		},
		{
			MethodName: "AddShopifyPayout",
			Handler:    _ShopifyBusinessService_AddShopifyPayout_Handler,
		},
		{
			MethodName: "GetShopifyBusinessByShopID",
			Handler:    _ShopifyBusinessService_GetShopifyBusinessByShopID_Handler,
		},
		{
			MethodName: "GetShopifyBusinessByBusinessID",
			Handler:    _ShopifyBusinessService_GetShopifyBusinessByBusinessID_Handler,
		},
		{
			MethodName: "GetShopifyPayoutByTransactionID",
			Handler:    _ShopifyBusinessService_GetShopifyPayoutByTransactionID_Handler,
		},
		{
			MethodName: "ActivateShopifyBusiness",
			Handler:    _ShopifyBusinessService_ActivateShopifyBusiness_Handler,
		},
		{
			MethodName: "UpdateOrderPaymentStatus",
			Handler:    _ShopifyBusinessService_UpdateOrderPaymentStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shopping/shopify/service.proto",
}
