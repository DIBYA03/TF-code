// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: banking/linked_payee/service.proto

package linked_payee

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	golang "github.com/wiseco/protobuf/golang"
	banking "github.com/wiseco/protobuf/golang/banking"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LinkedPayeeStatus int32

const (
	LinkedPayeeStatus_LPS_UNSPECIFIED LinkedPayeeStatus = 0
	LinkedPayeeStatus_LPS_ACTIVE      LinkedPayeeStatus = 1
	LinkedPayeeStatus_LPS_INACTIVE    LinkedPayeeStatus = 2
)

// Enum value maps for LinkedPayeeStatus.
var (
	LinkedPayeeStatus_name = map[int32]string{
		0: "LPS_UNSPECIFIED",
		1: "LPS_ACTIVE",
		2: "LPS_INACTIVE",
	}
	LinkedPayeeStatus_value = map[string]int32{
		"LPS_UNSPECIFIED": 0,
		"LPS_ACTIVE":      1,
		"LPS_INACTIVE":    2,
	}
)

func (x LinkedPayeeStatus) Enum() *LinkedPayeeStatus {
	p := new(LinkedPayeeStatus)
	*p = x
	return p
}

func (x LinkedPayeeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkedPayeeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_banking_linked_payee_service_proto_enumTypes[0].Descriptor()
}

func (LinkedPayeeStatus) Type() protoreflect.EnumType {
	return &file_banking_linked_payee_service_proto_enumTypes[0]
}

func (x LinkedPayeeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkedPayeeStatus.Descriptor instead.
func (LinkedPayeeStatus) EnumDescriptor() ([]byte, []int) {
	return file_banking_linked_payee_service_proto_rawDescGZIP(), []int{0}
}

type LinkedPayee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessId         string               `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ContactId          string               `protobuf:"bytes,3,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	Address            *golang.Address      `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	PartnerName        banking.PartnerName  `protobuf:"varint,5,opt,name=partner_name,json=partnerName,proto3,enum=wise.protobuf.banking.PartnerName" json:"partner_name,omitempty"`
	PartnerReferenceId string               `protobuf:"bytes,6,opt,name=partner_reference_id,json=partnerReferenceId,proto3" json:"partner_reference_id,omitempty"`
	HolderName         string               `protobuf:"bytes,7,opt,name=holder_name,json=holderName,proto3" json:"holder_name,omitempty"`
	PayeeName          string               `protobuf:"bytes,8,opt,name=payee_name,json=payeeName,proto3" json:"payee_name,omitempty"`
	LinkedPayeeStatus  LinkedPayeeStatus    `protobuf:"varint,9,opt,name=linked_payee_status,json=linkedPayeeStatus,proto3,enum=wise.protobuf.banking.linked_payee.LinkedPayeeStatus" json:"linked_payee_status,omitempty"`
	Created            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`
	Modified           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=modified,proto3" json:"modified,omitempty"`
	//TODO Remove this hack once the client creates it's own payees
	AddressId string `protobuf:"bytes,12,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
}

func (x *LinkedPayee) Reset() {
	*x = LinkedPayee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banking_linked_payee_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedPayee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedPayee) ProtoMessage() {}

func (x *LinkedPayee) ProtoReflect() protoreflect.Message {
	mi := &file_banking_linked_payee_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedPayee.ProtoReflect.Descriptor instead.
func (*LinkedPayee) Descriptor() ([]byte, []int) {
	return file_banking_linked_payee_service_proto_rawDescGZIP(), []int{0}
}

func (x *LinkedPayee) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LinkedPayee) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *LinkedPayee) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *LinkedPayee) GetAddress() *golang.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *LinkedPayee) GetPartnerName() banking.PartnerName {
	if x != nil {
		return x.PartnerName
	}
	return banking.PartnerName_PN_UNSPECIFIED
}

func (x *LinkedPayee) GetPartnerReferenceId() string {
	if x != nil {
		return x.PartnerReferenceId
	}
	return ""
}

func (x *LinkedPayee) GetHolderName() string {
	if x != nil {
		return x.HolderName
	}
	return ""
}

func (x *LinkedPayee) GetPayeeName() string {
	if x != nil {
		return x.PayeeName
	}
	return ""
}

func (x *LinkedPayee) GetLinkedPayeeStatus() LinkedPayeeStatus {
	if x != nil {
		return x.LinkedPayeeStatus
	}
	return LinkedPayeeStatus_LPS_UNSPECIFIED
}

func (x *LinkedPayee) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *LinkedPayee) GetModified() *timestamp.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *LinkedPayee) GetAddressId() string {
	if x != nil {
		return x.AddressId
	}
	return ""
}

type LinkedPayees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkedPayees []*LinkedPayee `protobuf:"bytes,1,rep,name=linked_payees,json=linkedPayees,proto3" json:"linked_payees,omitempty"`
}

func (x *LinkedPayees) Reset() {
	*x = LinkedPayees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banking_linked_payee_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedPayees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedPayees) ProtoMessage() {}

func (x *LinkedPayees) ProtoReflect() protoreflect.Message {
	mi := &file_banking_linked_payee_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedPayees.ProtoReflect.Descriptor instead.
func (*LinkedPayees) Descriptor() ([]byte, []int) {
	return file_banking_linked_payee_service_proto_rawDescGZIP(), []int{1}
}

func (x *LinkedPayees) GetLinkedPayees() []*LinkedPayee {
	if x != nil {
		return x.LinkedPayees
	}
	return nil
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId  string              `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ContactId   string              `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	Address     *golang.Address     `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	PartnerName banking.PartnerName `protobuf:"varint,4,opt,name=partner_name,json=partnerName,proto3,enum=wise.protobuf.banking.PartnerName" json:"partner_name,omitempty"`
	HolderName  string              `protobuf:"bytes,5,opt,name=holder_name,json=holderName,proto3" json:"holder_name,omitempty"`
	PayeeName   string              `protobuf:"bytes,6,opt,name=payee_name,json=payeeName,proto3" json:"payee_name,omitempty"`
	IpAddress   string              `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	//TODO Remove this hack once the client creates it's own payees
	AddressId string `protobuf:"bytes,8,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banking_linked_payee_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banking_linked_payee_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_banking_linked_payee_service_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *RegisterRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *RegisterRequest) GetAddress() *golang.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RegisterRequest) GetPartnerName() banking.PartnerName {
	if x != nil {
		return x.PartnerName
	}
	return banking.PartnerName_PN_UNSPECIFIED
}

func (x *RegisterRequest) GetHolderName() string {
	if x != nil {
		return x.HolderName
	}
	return ""
}

func (x *RegisterRequest) GetPayeeName() string {
	if x != nil {
		return x.PayeeName
	}
	return ""
}

func (x *RegisterRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *RegisterRequest) GetAddressId() string {
	if x != nil {
		return x.AddressId
	}
	return ""
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkedPayeeId string          `protobuf:"bytes,1,opt,name=linked_payee_id,json=linkedPayeeId,proto3" json:"linked_payee_id,omitempty"`
	Address       *golang.Address `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	HolderName    string          `protobuf:"bytes,3,opt,name=holder_name,json=holderName,proto3" json:"holder_name,omitempty"`
	PayeeName     string          `protobuf:"bytes,4,opt,name=payee_name,json=payeeName,proto3" json:"payee_name,omitempty"`
	AccountNumber string          `protobuf:"bytes,5,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	IpAddress     string          `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banking_linked_payee_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banking_linked_payee_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_banking_linked_payee_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRequest) GetLinkedPayeeId() string {
	if x != nil {
		return x.LinkedPayeeId
	}
	return ""
}

func (x *UpdateRequest) GetAddress() *golang.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UpdateRequest) GetHolderName() string {
	if x != nil {
		return x.HolderName
	}
	return ""
}

func (x *UpdateRequest) GetPayeeName() string {
	if x != nil {
		return x.PayeeName
	}
	return ""
}

func (x *UpdateRequest) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *UpdateRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkedPayeeId string           `protobuf:"bytes,1,opt,name=linked_payee_id,json=linkedPayeeId,proto3" json:"linked_payee_id,omitempty"`
	ActorId       string           `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActorType     golang.ActorType `protobuf:"varint,3,opt,name=actor_type,json=actorType,proto3,enum=wise.protobuf.ActorType" json:"actor_type,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banking_linked_payee_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banking_linked_payee_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_banking_linked_payee_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetLinkedPayeeId() string {
	if x != nil {
		return x.LinkedPayeeId
	}
	return ""
}

func (x *DeleteRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *DeleteRequest) GetActorType() golang.ActorType {
	if x != nil {
		return x.ActorType
	}
	return golang.ActorType_AT_UNSPECIFIED
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkedPayeeId  string `protobuf:"bytes,1,opt,name=linked_payee_id,json=linkedPayeeId,proto3" json:"linked_payee_id,omitempty"`
	PartnerPayeeId string `protobuf:"bytes,2,opt,name=partner_payee_id,json=partnerPayeeId,proto3" json:"partner_payee_id,omitempty"`
	//TODO Remove this hack once the client creates it's own payees
	AddressId string `protobuf:"bytes,3,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banking_linked_payee_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banking_linked_payee_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_banking_linked_payee_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetRequest) GetLinkedPayeeId() string {
	if x != nil {
		return x.LinkedPayeeId
	}
	return ""
}

func (x *GetRequest) GetPartnerPayeeId() string {
	if x != nil {
		return x.PartnerPayeeId
	}
	return ""
}

func (x *GetRequest) GetAddressId() string {
	if x != nil {
		return x.AddressId
	}
	return ""
}

type GetManyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId   string              `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ContactId    string              `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	Limit        int32               `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset       int32               `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	StatusFilter []LinkedPayeeStatus `protobuf:"varint,5,rep,packed,name=status_filter,json=statusFilter,proto3,enum=wise.protobuf.banking.linked_payee.LinkedPayeeStatus" json:"status_filter,omitempty"`
}

func (x *GetManyRequest) Reset() {
	*x = GetManyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banking_linked_payee_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManyRequest) ProtoMessage() {}

func (x *GetManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banking_linked_payee_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManyRequest.ProtoReflect.Descriptor instead.
func (*GetManyRequest) Descriptor() ([]byte, []int) {
	return file_banking_linked_payee_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetManyRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *GetManyRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *GetManyRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetManyRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetManyRequest) GetStatusFilter() []LinkedPayeeStatus {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

var File_banking_linked_payee_service_proto protoreflect.FileDescriptor

var file_banking_linked_payee_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc,
	0x04, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x45, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x13, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x64, 0x0a,
	0x0c, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x73, 0x12, 0x54, 0x0a,
	0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x65, 0x65, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79,
	0x65, 0x65, 0x73, 0x22, 0xc8, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0xef,
	0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79,
	0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7d,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0xda, 0x01,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x5a,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2a, 0x4a, 0x0a, 0x11, 0x4c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x13, 0x0a, 0x0f, 0x4c, 0x50, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x50, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x50, 0x53, 0x5f, 0x49, 0x4e, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x32, 0xa2, 0x04, 0x0a, 0x12, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x70, 0x0a,
	0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61,
	0x79, 0x65, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x12,
	0x6c, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x77,
	0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x12, 0x53, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x66, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x12, 0x6f, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x32, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x73, 0x42, 0x38, 0x5a, 0x36, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x69, 0x73, 0x65, 0x63, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_banking_linked_payee_service_proto_rawDescOnce sync.Once
	file_banking_linked_payee_service_proto_rawDescData = file_banking_linked_payee_service_proto_rawDesc
)

func file_banking_linked_payee_service_proto_rawDescGZIP() []byte {
	file_banking_linked_payee_service_proto_rawDescOnce.Do(func() {
		file_banking_linked_payee_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_banking_linked_payee_service_proto_rawDescData)
	})
	return file_banking_linked_payee_service_proto_rawDescData
}

var file_banking_linked_payee_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_banking_linked_payee_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_banking_linked_payee_service_proto_goTypes = []interface{}{
	(LinkedPayeeStatus)(0),      // 0: wise.protobuf.banking.linked_payee.LinkedPayeeStatus
	(*LinkedPayee)(nil),         // 1: wise.protobuf.banking.linked_payee.LinkedPayee
	(*LinkedPayees)(nil),        // 2: wise.protobuf.banking.linked_payee.LinkedPayees
	(*RegisterRequest)(nil),     // 3: wise.protobuf.banking.linked_payee.RegisterRequest
	(*UpdateRequest)(nil),       // 4: wise.protobuf.banking.linked_payee.UpdateRequest
	(*DeleteRequest)(nil),       // 5: wise.protobuf.banking.linked_payee.DeleteRequest
	(*GetRequest)(nil),          // 6: wise.protobuf.banking.linked_payee.GetRequest
	(*GetManyRequest)(nil),      // 7: wise.protobuf.banking.linked_payee.GetManyRequest
	(*golang.Address)(nil),      // 8: wise.protobuf.Address
	(banking.PartnerName)(0),    // 9: wise.protobuf.banking.PartnerName
	(*timestamp.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(golang.ActorType)(0),       // 11: wise.protobuf.ActorType
	(*empty.Empty)(nil),         // 12: google.protobuf.Empty
}
var file_banking_linked_payee_service_proto_depIdxs = []int32{
	8,  // 0: wise.protobuf.banking.linked_payee.LinkedPayee.address:type_name -> wise.protobuf.Address
	9,  // 1: wise.protobuf.banking.linked_payee.LinkedPayee.partner_name:type_name -> wise.protobuf.banking.PartnerName
	0,  // 2: wise.protobuf.banking.linked_payee.LinkedPayee.linked_payee_status:type_name -> wise.protobuf.banking.linked_payee.LinkedPayeeStatus
	10, // 3: wise.protobuf.banking.linked_payee.LinkedPayee.created:type_name -> google.protobuf.Timestamp
	10, // 4: wise.protobuf.banking.linked_payee.LinkedPayee.modified:type_name -> google.protobuf.Timestamp
	1,  // 5: wise.protobuf.banking.linked_payee.LinkedPayees.linked_payees:type_name -> wise.protobuf.banking.linked_payee.LinkedPayee
	8,  // 6: wise.protobuf.banking.linked_payee.RegisterRequest.address:type_name -> wise.protobuf.Address
	9,  // 7: wise.protobuf.banking.linked_payee.RegisterRequest.partner_name:type_name -> wise.protobuf.banking.PartnerName
	8,  // 8: wise.protobuf.banking.linked_payee.UpdateRequest.address:type_name -> wise.protobuf.Address
	11, // 9: wise.protobuf.banking.linked_payee.DeleteRequest.actor_type:type_name -> wise.protobuf.ActorType
	0,  // 10: wise.protobuf.banking.linked_payee.GetManyRequest.status_filter:type_name -> wise.protobuf.banking.linked_payee.LinkedPayeeStatus
	3,  // 11: wise.protobuf.banking.linked_payee.LinkedPayeeService.Register:input_type -> wise.protobuf.banking.linked_payee.RegisterRequest
	4,  // 12: wise.protobuf.banking.linked_payee.LinkedPayeeService.Update:input_type -> wise.protobuf.banking.linked_payee.UpdateRequest
	5,  // 13: wise.protobuf.banking.linked_payee.LinkedPayeeService.Delete:input_type -> wise.protobuf.banking.linked_payee.DeleteRequest
	6,  // 14: wise.protobuf.banking.linked_payee.LinkedPayeeService.Get:input_type -> wise.protobuf.banking.linked_payee.GetRequest
	7,  // 15: wise.protobuf.banking.linked_payee.LinkedPayeeService.GetMany:input_type -> wise.protobuf.banking.linked_payee.GetManyRequest
	1,  // 16: wise.protobuf.banking.linked_payee.LinkedPayeeService.Register:output_type -> wise.protobuf.banking.linked_payee.LinkedPayee
	1,  // 17: wise.protobuf.banking.linked_payee.LinkedPayeeService.Update:output_type -> wise.protobuf.banking.linked_payee.LinkedPayee
	12, // 18: wise.protobuf.banking.linked_payee.LinkedPayeeService.Delete:output_type -> google.protobuf.Empty
	1,  // 19: wise.protobuf.banking.linked_payee.LinkedPayeeService.Get:output_type -> wise.protobuf.banking.linked_payee.LinkedPayee
	2,  // 20: wise.protobuf.banking.linked_payee.LinkedPayeeService.GetMany:output_type -> wise.protobuf.banking.linked_payee.LinkedPayees
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_banking_linked_payee_service_proto_init() }
func file_banking_linked_payee_service_proto_init() {
	if File_banking_linked_payee_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_banking_linked_payee_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedPayee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banking_linked_payee_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedPayees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banking_linked_payee_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banking_linked_payee_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banking_linked_payee_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banking_linked_payee_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banking_linked_payee_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetManyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_banking_linked_payee_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_banking_linked_payee_service_proto_goTypes,
		DependencyIndexes: file_banking_linked_payee_service_proto_depIdxs,
		EnumInfos:         file_banking_linked_payee_service_proto_enumTypes,
		MessageInfos:      file_banking_linked_payee_service_proto_msgTypes,
	}.Build()
	File_banking_linked_payee_service_proto = out.File
	file_banking_linked_payee_service_proto_rawDesc = nil
	file_banking_linked_payee_service_proto_goTypes = nil
	file_banking_linked_payee_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LinkedPayeeServiceClient is the client API for LinkedPayeeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LinkedPayeeServiceClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*LinkedPayee, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*LinkedPayee, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*LinkedPayee, error)
	GetMany(ctx context.Context, in *GetManyRequest, opts ...grpc.CallOption) (*LinkedPayees, error)
}

type linkedPayeeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLinkedPayeeServiceClient(cc grpc.ClientConnInterface) LinkedPayeeServiceClient {
	return &linkedPayeeServiceClient{cc}
}

func (c *linkedPayeeServiceClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*LinkedPayee, error) {
	out := new(LinkedPayee)
	err := c.cc.Invoke(ctx, "/wise.protobuf.banking.linked_payee.LinkedPayeeService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkedPayeeServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*LinkedPayee, error) {
	out := new(LinkedPayee)
	err := c.cc.Invoke(ctx, "/wise.protobuf.banking.linked_payee.LinkedPayeeService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkedPayeeServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/wise.protobuf.banking.linked_payee.LinkedPayeeService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkedPayeeServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*LinkedPayee, error) {
	out := new(LinkedPayee)
	err := c.cc.Invoke(ctx, "/wise.protobuf.banking.linked_payee.LinkedPayeeService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkedPayeeServiceClient) GetMany(ctx context.Context, in *GetManyRequest, opts ...grpc.CallOption) (*LinkedPayees, error) {
	out := new(LinkedPayees)
	err := c.cc.Invoke(ctx, "/wise.protobuf.banking.linked_payee.LinkedPayeeService/GetMany", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LinkedPayeeServiceServer is the server API for LinkedPayeeService service.
type LinkedPayeeServiceServer interface {
	Register(context.Context, *RegisterRequest) (*LinkedPayee, error)
	Update(context.Context, *UpdateRequest) (*LinkedPayee, error)
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	Get(context.Context, *GetRequest) (*LinkedPayee, error)
	GetMany(context.Context, *GetManyRequest) (*LinkedPayees, error)
}

// UnimplementedLinkedPayeeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLinkedPayeeServiceServer struct {
}

func (*UnimplementedLinkedPayeeServiceServer) Register(context.Context, *RegisterRequest) (*LinkedPayee, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedLinkedPayeeServiceServer) Update(context.Context, *UpdateRequest) (*LinkedPayee, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedLinkedPayeeServiceServer) Delete(context.Context, *DeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedLinkedPayeeServiceServer) Get(context.Context, *GetRequest) (*LinkedPayee, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedLinkedPayeeServiceServer) GetMany(context.Context, *GetManyRequest) (*LinkedPayees, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMany not implemented")
}

func RegisterLinkedPayeeServiceServer(s *grpc.Server, srv LinkedPayeeServiceServer) {
	s.RegisterService(&_LinkedPayeeService_serviceDesc, srv)
}

func _LinkedPayeeService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkedPayeeServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.banking.linked_payee.LinkedPayeeService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkedPayeeServiceServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkedPayeeService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkedPayeeServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.banking.linked_payee.LinkedPayeeService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkedPayeeServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkedPayeeService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkedPayeeServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.banking.linked_payee.LinkedPayeeService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkedPayeeServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkedPayeeService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkedPayeeServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.banking.linked_payee.LinkedPayeeService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkedPayeeServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkedPayeeService_GetMany_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetManyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkedPayeeServiceServer).GetMany(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.banking.linked_payee.LinkedPayeeService/GetMany",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkedPayeeServiceServer).GetMany(ctx, req.(*GetManyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LinkedPayeeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wise.protobuf.banking.linked_payee.LinkedPayeeService",
	HandlerType: (*LinkedPayeeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _LinkedPayeeService_Register_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _LinkedPayeeService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _LinkedPayeeService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _LinkedPayeeService_Get_Handler,
		},
		{
			MethodName: "GetMany",
			Handler:    _LinkedPayeeService_GetMany_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "banking/linked_payee/service.proto",
}
