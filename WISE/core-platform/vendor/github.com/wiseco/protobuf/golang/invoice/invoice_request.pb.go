// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: invoice/invoice_request.proto

package invoice

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	golang "github.com/wiseco/protobuf/golang"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type InvoiceRequestStatus int32

const (
	InvoiceRequestStatus_IRT_UNSPECIFIED        InvoiceRequestStatus = 0
	InvoiceRequestStatus_IRT_DRAFT              InvoiceRequestStatus = 100
	InvoiceRequestStatus_IRT_OPEN               InvoiceRequestStatus = 101
	InvoiceRequestStatus_IRT_PAID               InvoiceRequestStatus = 102
	InvoiceRequestStatus_IRT_PROCESSING_PAYMENT InvoiceRequestStatus = 103
	InvoiceRequestStatus_IRT_CANCELLED          InvoiceRequestStatus = 104
	InvoiceRequestStatus_IRT_FAILED             InvoiceRequestStatus = 105
)

// Enum value maps for InvoiceRequestStatus.
var (
	InvoiceRequestStatus_name = map[int32]string{
		0:   "IRT_UNSPECIFIED",
		100: "IRT_DRAFT",
		101: "IRT_OPEN",
		102: "IRT_PAID",
		103: "IRT_PROCESSING_PAYMENT",
		104: "IRT_CANCELLED",
		105: "IRT_FAILED",
	}
	InvoiceRequestStatus_value = map[string]int32{
		"IRT_UNSPECIFIED":        0,
		"IRT_DRAFT":              100,
		"IRT_OPEN":               101,
		"IRT_PAID":               102,
		"IRT_PROCESSING_PAYMENT": 103,
		"IRT_CANCELLED":          104,
		"IRT_FAILED":             105,
	}
)

func (x InvoiceRequestStatus) Enum() *InvoiceRequestStatus {
	p := new(InvoiceRequestStatus)
	*p = x
	return p
}

func (x InvoiceRequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvoiceRequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_invoice_invoice_request_proto_enumTypes[0].Descriptor()
}

func (InvoiceRequestStatus) Type() protoreflect.EnumType {
	return &file_invoice_invoice_request_proto_enumTypes[0]
}

func (x InvoiceRequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvoiceRequestStatus.Descriptor instead.
func (InvoiceRequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{0}
}

type PaymentMethod int32

const (
	PaymentMethod_PM_UNSPECIFIED   PaymentMethod = 0
	PaymentMethod_PM_CARD          PaymentMethod = 100
	PaymentMethod_PM_BANK_TRANSFER PaymentMethod = 101
	PaymentMethod_PM_APPLE_PAY     PaymentMethod = 102
	PaymentMethod_PM_GOOGLE_PAY    PaymentMethod = 103
	PaymentMethod_PM_OFFLINE_PAY   PaymentMethod = 104
)

// Enum value maps for PaymentMethod.
var (
	PaymentMethod_name = map[int32]string{
		0:   "PM_UNSPECIFIED",
		100: "PM_CARD",
		101: "PM_BANK_TRANSFER",
		102: "PM_APPLE_PAY",
		103: "PM_GOOGLE_PAY",
		104: "PM_OFFLINE_PAY",
	}
	PaymentMethod_value = map[string]int32{
		"PM_UNSPECIFIED":   0,
		"PM_CARD":          100,
		"PM_BANK_TRANSFER": 101,
		"PM_APPLE_PAY":     102,
		"PM_GOOGLE_PAY":    103,
		"PM_OFFLINE_PAY":   104,
	}
)

func (x PaymentMethod) Enum() *PaymentMethod {
	p := new(PaymentMethod)
	*p = x
	return p
}

func (x PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_invoice_invoice_request_proto_enumTypes[1].Descriptor()
}

func (PaymentMethod) Type() protoreflect.EnumType {
	return &file_invoice_invoice_request_proto_enumTypes[1]
}

func (x PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethod.Descriptor instead.
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{1}
}

type InvoiceAction int32

const (
	InvoiceAction_IA_UNSPECIFIED       InvoiceAction = 0
	InvoiceAction_IA_SEND_REMINDER     InvoiceAction = 100
	InvoiceAction_IA_MARK_AS_PAID      InvoiceAction = 101
	InvoiceAction_IA_MARK_AS_CANCELLED InvoiceAction = 102
)

// Enum value maps for InvoiceAction.
var (
	InvoiceAction_name = map[int32]string{
		0:   "IA_UNSPECIFIED",
		100: "IA_SEND_REMINDER",
		101: "IA_MARK_AS_PAID",
		102: "IA_MARK_AS_CANCELLED",
	}
	InvoiceAction_value = map[string]int32{
		"IA_UNSPECIFIED":       0,
		"IA_SEND_REMINDER":     100,
		"IA_MARK_AS_PAID":      101,
		"IA_MARK_AS_CANCELLED": 102,
	}
)

func (x InvoiceAction) Enum() *InvoiceAction {
	p := new(InvoiceAction)
	*p = x
	return p
}

func (x InvoiceAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvoiceAction) Descriptor() protoreflect.EnumDescriptor {
	return file_invoice_invoice_request_proto_enumTypes[2].Descriptor()
}

func (InvoiceAction) Type() protoreflect.EnumType {
	return &file_invoice_invoice_request_proto_enumTypes[2]
}

func (x InvoiceAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvoiceAction.Descriptor instead.
func (InvoiceAction) EnumDescriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{2}
}

type InvoicePaymentType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowCards        golang.Boolean `protobuf:"varint,1,opt,name=allow_cards,json=allowCards,proto3,enum=wise.protobuf.Boolean" json:"allow_cards,omitempty"`
	AllowBankTransfer golang.Boolean `protobuf:"varint,2,opt,name=allow_bank_transfer,json=allowBankTransfer,proto3,enum=wise.protobuf.Boolean" json:"allow_bank_transfer,omitempty"`
}

func (x *InvoicePaymentType) Reset() {
	*x = InvoicePaymentType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoicePaymentType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoicePaymentType) ProtoMessage() {}

func (x *InvoicePaymentType) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoicePaymentType.ProtoReflect.Descriptor instead.
func (*InvoicePaymentType) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{0}
}

func (x *InvoicePaymentType) GetAllowCards() golang.Boolean {
	if x != nil {
		return x.AllowCards
	}
	return golang.Boolean_B_UNSPECIFIED
}

func (x *InvoicePaymentType) GetAllowBankTransfer() golang.Boolean {
	if x != nil {
		return x.AllowBankTransfer
	}
	return golang.Boolean_B_UNSPECIFIED
}

type LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId      string         `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Name        string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Quantity    int32          `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	IsTaxable   golang.Boolean `protobuf:"varint,5,opt,name=is_taxable,json=isTaxable,proto3,enum=wise.protobuf.Boolean" json:"is_taxable,omitempty"`
	Price       string         `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	Amount      string         `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"` // quantity*price
	Tax         string         `protobuf:"bytes,8,opt,name=tax,proto3" json:"tax,omitempty"`
	TotalAmount string         `protobuf:"bytes,9,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	Currency    string         `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *LineItem) Reset() {
	*x = LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineItem) ProtoMessage() {}

func (x *LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineItem.ProtoReflect.Descriptor instead.
func (*LineItem) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{1}
}

func (x *LineItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LineItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *LineItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LineItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *LineItem) GetIsTaxable() golang.Boolean {
	if x != nil {
		return x.IsTaxable
	}
	return golang.Boolean_B_UNSPECIFIED
}

func (x *LineItem) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *LineItem) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *LineItem) GetTax() string {
	if x != nil {
		return x.Tax
	}
	return ""
}

func (x *LineItem) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *LineItem) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type AccountDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNumber string `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	RoutingNumber string `protobuf:"bytes,2,opt,name=routing_number,json=routingNumber,proto3" json:"routing_number,omitempty"`
}

func (x *AccountDetail) Reset() {
	*x = AccountDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetail) ProtoMessage() {}

func (x *AccountDetail) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetail.ProtoReflect.Descriptor instead.
func (*AccountDetail) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{2}
}

func (x *AccountDetail) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *AccountDetail) GetRoutingNumber() string {
	if x != nil {
		return x.RoutingNumber
	}
	return ""
}

type InvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessId          string               `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ActorId             string               `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActorType           golang.ActorType     `protobuf:"varint,4,opt,name=actor_type,json=actorType,proto3,enum=wise.protobuf.ActorType" json:"actor_type,omitempty"`
	ContactId           string               `protobuf:"bytes,5,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	Title               string               `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Notes               string               `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	Number              int64                `protobuf:"varint,8,opt,name=number,proto3" json:"number,omitempty"`
	Amount              string               `protobuf:"bytes,9,opt,name=amount,proto3" json:"amount,omitempty"`
	ShowBankAccount     golang.Boolean       `protobuf:"varint,10,opt,name=show_bank_account,json=showBankAccount,proto3,enum=wise.protobuf.Boolean" json:"show_bank_account,omitempty"`
	Status              InvoiceRequestStatus `protobuf:"varint,11,opt,name=status,proto3,enum=wise.protobuf.invoice.InvoiceRequestStatus" json:"status,omitempty"`
	PaymentTypes        *InvoicePaymentType  `protobuf:"bytes,12,opt,name=payment_types,json=paymentTypes,proto3" json:"payment_types,omitempty"`
	LineItems           []*LineItem          `protobuf:"bytes,13,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	RequestIp           string               `protobuf:"bytes,14,opt,name=request_ip,json=requestIp,proto3" json:"request_ip,omitempty"`
	RequestSource       string               `protobuf:"bytes,15,opt,name=request_source,json=requestSource,proto3" json:"request_source,omitempty"`
	RequestSourceId     string               `protobuf:"bytes,16,opt,name=request_source_id,json=requestSourceId,proto3" json:"request_source_id,omitempty"`
	Created             *timestamp.Timestamp `protobuf:"bytes,17,opt,name=created,proto3" json:"created,omitempty"`
	Modified            *timestamp.Timestamp `protobuf:"bytes,18,opt,name=modified,proto3" json:"modified,omitempty"`
	ContactDetails      *Contact             `protobuf:"bytes,19,opt,name=contact_details,json=contactDetails,proto3" json:"contact_details,omitempty"`
	NotifyEmail         golang.Boolean       `protobuf:"varint,21,opt,name=notify_email,json=notifyEmail,proto3,enum=wise.protobuf.Boolean" json:"notify_email,omitempty"`
	Currency            string               `protobuf:"bytes,22,opt,name=currency,proto3" json:"currency,omitempty"`
	InvoiceLink         string               `protobuf:"bytes,23,opt,name=InvoiceLink,proto3" json:"InvoiceLink,omitempty"`
	LegacyInvoiceNumber string               `protobuf:"bytes,24,opt,name=legacy_invoice_number,json=legacyInvoiceNumber,proto3" json:"legacy_invoice_number,omitempty"`
}

func (x *InvoiceRequest) Reset() {
	*x = InvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceRequest) ProtoMessage() {}

func (x *InvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceRequest.ProtoReflect.Descriptor instead.
func (*InvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{3}
}

func (x *InvoiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvoiceRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *InvoiceRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *InvoiceRequest) GetActorType() golang.ActorType {
	if x != nil {
		return x.ActorType
	}
	return golang.ActorType_AT_UNSPECIFIED
}

func (x *InvoiceRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *InvoiceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InvoiceRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *InvoiceRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *InvoiceRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *InvoiceRequest) GetShowBankAccount() golang.Boolean {
	if x != nil {
		return x.ShowBankAccount
	}
	return golang.Boolean_B_UNSPECIFIED
}

func (x *InvoiceRequest) GetStatus() InvoiceRequestStatus {
	if x != nil {
		return x.Status
	}
	return InvoiceRequestStatus_IRT_UNSPECIFIED
}

func (x *InvoiceRequest) GetPaymentTypes() *InvoicePaymentType {
	if x != nil {
		return x.PaymentTypes
	}
	return nil
}

func (x *InvoiceRequest) GetLineItems() []*LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *InvoiceRequest) GetRequestIp() string {
	if x != nil {
		return x.RequestIp
	}
	return ""
}

func (x *InvoiceRequest) GetRequestSource() string {
	if x != nil {
		return x.RequestSource
	}
	return ""
}

func (x *InvoiceRequest) GetRequestSourceId() string {
	if x != nil {
		return x.RequestSourceId
	}
	return ""
}

func (x *InvoiceRequest) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *InvoiceRequest) GetModified() *timestamp.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *InvoiceRequest) GetContactDetails() *Contact {
	if x != nil {
		return x.ContactDetails
	}
	return nil
}

func (x *InvoiceRequest) GetNotifyEmail() golang.Boolean {
	if x != nil {
		return x.NotifyEmail
	}
	return golang.Boolean_B_UNSPECIFIED
}

func (x *InvoiceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *InvoiceRequest) GetInvoiceLink() string {
	if x != nil {
		return x.InvoiceLink
	}
	return ""
}

func (x *InvoiceRequest) GetLegacyInvoiceNumber() string {
	if x != nil {
		return x.LegacyInvoiceNumber
	}
	return ""
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId            string   `protobuf:"bytes,1,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	AdditionalEmails     []string `protobuf:"bytes,4,rep,name=additional_emails,json=additionalEmails,proto3" json:"additional_emails,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	InvoiceReceivedCount int32    `protobuf:"varint,6,opt,name=invoice_received_count,json=invoiceReceivedCount,proto3" json:"invoice_received_count,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{4}
}

func (x *Contact) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Contact) GetAdditionalEmails() []string {
	if x != nil {
		return x.AdditionalEmails
	}
	return nil
}

func (x *Contact) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Contact) GetInvoiceReceivedCount() int32 {
	if x != nil {
		return x.InvoiceReceivedCount
	}
	return 0
}

type Business struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email   string          `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Address *golang.Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Logo    string          `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	LogoKey string          `protobuf:"bytes,5,opt,name=logo_key,json=logoKey,proto3" json:"logo_key,omitempty"`
}

func (x *Business) Reset() {
	*x = Business{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Business) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Business) ProtoMessage() {}

func (x *Business) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Business.ProtoReflect.Descriptor instead.
func (*Business) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{5}
}

func (x *Business) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Business) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Business) GetAddress() *golang.Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Business) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Business) GetLogoKey() string {
	if x != nil {
		return x.LogoKey
	}
	return ""
}

type FullInvoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessId           string               `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ActorId              string               `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActorType            golang.ActorType     `protobuf:"varint,4,opt,name=actor_type,json=actorType,proto3,enum=wise.protobuf.ActorType" json:"actor_type,omitempty"`
	ContactId            string               `protobuf:"bytes,5,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	Title                string               `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Notes                string               `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	Number               int64                `protobuf:"varint,8,opt,name=number,proto3" json:"number,omitempty"`
	AmountExcludingTax   string               `protobuf:"bytes,9,opt,name=amount_excluding_tax,json=amountExcludingTax,proto3" json:"amount_excluding_tax,omitempty"`
	ShowBankAccount      bool                 `protobuf:"varint,10,opt,name=show_bank_account,json=showBankAccount,proto3" json:"show_bank_account,omitempty"`
	Status               InvoiceRequestStatus `protobuf:"varint,11,opt,name=status,proto3,enum=wise.protobuf.invoice.InvoiceRequestStatus" json:"status,omitempty"`
	PaymentTypes         *InvoicePaymentType  `protobuf:"bytes,12,opt,name=payment_types,json=paymentTypes,proto3" json:"payment_types,omitempty"`
	LineItems            []*LineItem          `protobuf:"bytes,13,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	RequestIp            string               `protobuf:"bytes,14,opt,name=request_ip,json=requestIp,proto3" json:"request_ip,omitempty"`
	RequestSource        string               `protobuf:"bytes,15,opt,name=request_source,json=requestSource,proto3" json:"request_source,omitempty"`
	RequestSourceId      string               `protobuf:"bytes,16,opt,name=request_source_id,json=requestSourceId,proto3" json:"request_source_id,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,17,opt,name=created,proto3" json:"created,omitempty"`
	ContactDetails       *Contact             `protobuf:"bytes,19,opt,name=contact_details,json=contactDetails,proto3" json:"contact_details,omitempty"`
	PaymentInfo          *Payment             `protobuf:"bytes,20,opt,name=payment_info,json=paymentInfo,proto3" json:"payment_info,omitempty"`
	NotifyEmail          golang.Boolean       `protobuf:"varint,21,opt,name=notify_email,json=notifyEmail,proto3,enum=wise.protobuf.Boolean" json:"notify_email,omitempty"`
	AccountDetails       *AccountDetail       `protobuf:"bytes,22,opt,name=account_details,json=accountDetails,proto3" json:"account_details,omitempty"`
	PaymentLink          string               `protobuf:"bytes,23,opt,name=payment_link,json=paymentLink,proto3" json:"payment_link,omitempty"`
	InvoiceLink          string               `protobuf:"bytes,24,opt,name=invoice_link,json=invoiceLink,proto3" json:"invoice_link,omitempty"`
	TotalTax             string               `protobuf:"bytes,25,opt,name=total_tax,json=totalTax,proto3" json:"total_tax,omitempty"`
	TotalAmount          string               `protobuf:"bytes,26,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	Currency             string               `protobuf:"bytes,27,opt,name=currency,proto3" json:"currency,omitempty"`
	TaxDesciption        string               `protobuf:"bytes,28,opt,name=TaxDesciption,proto3" json:"TaxDesciption,omitempty"`
	TaxRate              string               `protobuf:"bytes,29,opt,name=TaxRate,proto3" json:"TaxRate,omitempty"`
	BusinessDetail       *Business            `protobuf:"bytes,30,opt,name=business_detail,json=businessDetail,proto3" json:"business_detail,omitempty"`
	BaseUrl              string               `protobuf:"bytes,31,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	LastReminderSentDate *timestamp.Timestamp `protobuf:"bytes,32,opt,name=last_reminder_sent_date,json=lastReminderSentDate,proto3" json:"last_reminder_sent_date,omitempty"`
}

func (x *FullInvoice) Reset() {
	*x = FullInvoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullInvoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullInvoice) ProtoMessage() {}

func (x *FullInvoice) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullInvoice.ProtoReflect.Descriptor instead.
func (*FullInvoice) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{6}
}

func (x *FullInvoice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FullInvoice) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *FullInvoice) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *FullInvoice) GetActorType() golang.ActorType {
	if x != nil {
		return x.ActorType
	}
	return golang.ActorType_AT_UNSPECIFIED
}

func (x *FullInvoice) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *FullInvoice) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FullInvoice) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *FullInvoice) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *FullInvoice) GetAmountExcludingTax() string {
	if x != nil {
		return x.AmountExcludingTax
	}
	return ""
}

func (x *FullInvoice) GetShowBankAccount() bool {
	if x != nil {
		return x.ShowBankAccount
	}
	return false
}

func (x *FullInvoice) GetStatus() InvoiceRequestStatus {
	if x != nil {
		return x.Status
	}
	return InvoiceRequestStatus_IRT_UNSPECIFIED
}

func (x *FullInvoice) GetPaymentTypes() *InvoicePaymentType {
	if x != nil {
		return x.PaymentTypes
	}
	return nil
}

func (x *FullInvoice) GetLineItems() []*LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *FullInvoice) GetRequestIp() string {
	if x != nil {
		return x.RequestIp
	}
	return ""
}

func (x *FullInvoice) GetRequestSource() string {
	if x != nil {
		return x.RequestSource
	}
	return ""
}

func (x *FullInvoice) GetRequestSourceId() string {
	if x != nil {
		return x.RequestSourceId
	}
	return ""
}

func (x *FullInvoice) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *FullInvoice) GetContactDetails() *Contact {
	if x != nil {
		return x.ContactDetails
	}
	return nil
}

func (x *FullInvoice) GetPaymentInfo() *Payment {
	if x != nil {
		return x.PaymentInfo
	}
	return nil
}

func (x *FullInvoice) GetNotifyEmail() golang.Boolean {
	if x != nil {
		return x.NotifyEmail
	}
	return golang.Boolean_B_UNSPECIFIED
}

func (x *FullInvoice) GetAccountDetails() *AccountDetail {
	if x != nil {
		return x.AccountDetails
	}
	return nil
}

func (x *FullInvoice) GetPaymentLink() string {
	if x != nil {
		return x.PaymentLink
	}
	return ""
}

func (x *FullInvoice) GetInvoiceLink() string {
	if x != nil {
		return x.InvoiceLink
	}
	return ""
}

func (x *FullInvoice) GetTotalTax() string {
	if x != nil {
		return x.TotalTax
	}
	return ""
}

func (x *FullInvoice) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *FullInvoice) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FullInvoice) GetTaxDesciption() string {
	if x != nil {
		return x.TaxDesciption
	}
	return ""
}

func (x *FullInvoice) GetTaxRate() string {
	if x != nil {
		return x.TaxRate
	}
	return ""
}

func (x *FullInvoice) GetBusinessDetail() *Business {
	if x != nil {
		return x.BusinessDetail
	}
	return nil
}

func (x *FullInvoice) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *FullInvoice) GetLastReminderSentDate() *timestamp.Timestamp {
	if x != nil {
		return x.LastReminderSentDate
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentType PaymentMethod        `protobuf:"varint,1,opt,name=payment_type,json=paymentType,proto3,enum=wise.protobuf.invoice.PaymentMethod" json:"payment_type,omitempty"`
	CardNumber  string               `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	CardBrand   string               `protobuf:"bytes,3,opt,name=card_brand,json=cardBrand,proto3" json:"card_brand,omitempty"`
	PaidDate    *timestamp.Timestamp `protobuf:"bytes,4,opt,name=paid_date,json=paidDate,proto3" json:"paid_date,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{7}
}

func (x *Payment) GetPaymentType() PaymentMethod {
	if x != nil {
		return x.PaymentType
	}
	return PaymentMethod_PM_UNSPECIFIED
}

func (x *Payment) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *Payment) GetCardBrand() string {
	if x != nil {
		return x.CardBrand
	}
	return ""
}

func (x *Payment) GetPaidDate() *timestamp.Timestamp {
	if x != nil {
		return x.PaidDate
	}
	return nil
}

type InvoiceActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *InvoiceActivityRequest) Reset() {
	*x = InvoiceActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceActivityRequest) ProtoMessage() {}

func (x *InvoiceActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceActivityRequest.ProtoReflect.Descriptor instead.
func (*InvoiceActivityRequest) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{8}
}

func (x *InvoiceActivityRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type InvoiceActivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalInvoices     int32      `protobuf:"varint,1,opt,name=total_invoices,json=totalInvoices,proto3" json:"total_invoices,omitempty"`
	LastSentContacts  []*Contact `protobuf:"bytes,2,rep,name=last_sent_contacts,json=lastSentContacts,proto3" json:"last_sent_contacts,omitempty"`
	NextInvoiceNumber int64      `protobuf:"varint,3,opt,name=next_invoice_number,json=nextInvoiceNumber,proto3" json:"next_invoice_number,omitempty"`
}

func (x *InvoiceActivityResponse) Reset() {
	*x = InvoiceActivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceActivityResponse) ProtoMessage() {}

func (x *InvoiceActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceActivityResponse.ProtoReflect.Descriptor instead.
func (*InvoiceActivityResponse) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{9}
}

func (x *InvoiceActivityResponse) GetTotalInvoices() int32 {
	if x != nil {
		return x.TotalInvoices
	}
	return 0
}

func (x *InvoiceActivityResponse) GetLastSentContacts() []*Contact {
	if x != nil {
		return x.LastSentContacts
	}
	return nil
}

func (x *InvoiceActivityResponse) GetNextInvoiceNumber() int64 {
	if x != nil {
		return x.NextInvoiceNumber
	}
	return 0
}

type InvoiceActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceIds []string      `protobuf:"bytes,1,rep,name=invoice_ids,json=invoiceIds,proto3" json:"invoice_ids,omitempty"`
	Action     InvoiceAction `protobuf:"varint,2,opt,name=action,proto3,enum=wise.protobuf.invoice.InvoiceAction" json:"action,omitempty"`
	BusinessId string        `protobuf:"bytes,3,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *InvoiceActionRequest) Reset() {
	*x = InvoiceActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceActionRequest) ProtoMessage() {}

func (x *InvoiceActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceActionRequest.ProtoReflect.Descriptor instead.
func (*InvoiceActionRequest) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{10}
}

func (x *InvoiceActionRequest) GetInvoiceIds() []string {
	if x != nil {
		return x.InvoiceIds
	}
	return nil
}

func (x *InvoiceActionRequest) GetAction() InvoiceAction {
	if x != nil {
		return x.Action
	}
	return InvoiceAction_IA_UNSPECIFIED
}

func (x *InvoiceActionRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type InvoiceActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reponse string `protobuf:"bytes,1,opt,name=reponse,proto3" json:"reponse,omitempty"`
}

func (x *InvoiceActionResponse) Reset() {
	*x = InvoiceActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_invoice_request_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceActionResponse) ProtoMessage() {}

func (x *InvoiceActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_invoice_request_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceActionResponse.ProtoReflect.Descriptor instead.
func (*InvoiceActionResponse) Descriptor() ([]byte, []int) {
	return file_invoice_invoice_request_proto_rawDescGZIP(), []int{11}
}

func (x *InvoiceActionResponse) GetReponse() string {
	if x != nil {
		return x.Reponse
	}
	return ""
}

var File_invoice_invoice_request_proto protoreflect.FileDescriptor

var file_invoice_invoice_request_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x15, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0x0d, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x46, 0x0a, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x61,
	0x6e, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0x99, 0x02, 0x0a, 0x08, 0x4c,
	0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x35, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x09, 0x69, 0x73,
	0x54, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x5d, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xff, 0x07, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x0f, 0x73, 0x68, 0x6f,
	0x77, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x77,
	0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x4e, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69,
	0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x70,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x47, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x69, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd8, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x11,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x16,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x08, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x69, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x4b, 0x65, 0x79, 0x22, 0x80, 0x0b, 0x0a, 0x0b, 0x46,
	0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x77, 0x69, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x62, 0x61, 0x6e,
	0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x73, 0x68, 0x6f, 0x77, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2b, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77,
	0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x47, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77,
	0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0c, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x4d, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x78, 0x44, 0x65, 0x73, 0x63,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61,
	0x78, 0x44, 0x65, 0x73, 0x63, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x61,
	0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x51, 0x0a, 0x17, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0xcb, 0x01,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x70, 0x61, 0x69, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x16, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x3c, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x22, 0x31, 0x0a, 0x15, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0x95, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x52, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x52, 0x54, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x64,
	0x12, 0x0c, 0x0a, 0x08, 0x49, 0x52, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x52, 0x54, 0x5f, 0x50, 0x41, 0x49, 0x44, 0x10, 0x66, 0x12, 0x1a, 0x0a, 0x16,
	0x49, 0x52, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x52, 0x54, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x68, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x52, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x69, 0x2a, 0x7f, 0x0a, 0x0d, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4d, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x64, 0x12, 0x14, 0x0a,
	0x10, 0x50, 0x4d, 0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45,
	0x52, 0x10, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x5f,
	0x50, 0x41, 0x59, 0x10, 0x66, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4d, 0x5f, 0x47, 0x4f, 0x4f, 0x47,
	0x4c, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x10, 0x67, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4d, 0x5f, 0x4f,
	0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x10, 0x68, 0x2a, 0x68, 0x0a, 0x0d,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x0e, 0x49, 0x41, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x41, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x4d,
	0x49, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x41, 0x5f, 0x4d, 0x41,
	0x52, 0x4b, 0x5f, 0x41, 0x53, 0x5f, 0x50, 0x41, 0x49, 0x44, 0x10, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x49, 0x41, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x41, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x66, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_invoice_invoice_request_proto_rawDescOnce sync.Once
	file_invoice_invoice_request_proto_rawDescData = file_invoice_invoice_request_proto_rawDesc
)

func file_invoice_invoice_request_proto_rawDescGZIP() []byte {
	file_invoice_invoice_request_proto_rawDescOnce.Do(func() {
		file_invoice_invoice_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_invoice_invoice_request_proto_rawDescData)
	})
	return file_invoice_invoice_request_proto_rawDescData
}

var file_invoice_invoice_request_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_invoice_invoice_request_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_invoice_invoice_request_proto_goTypes = []interface{}{
	(InvoiceRequestStatus)(0),       // 0: wise.protobuf.invoice.InvoiceRequestStatus
	(PaymentMethod)(0),              // 1: wise.protobuf.invoice.PaymentMethod
	(InvoiceAction)(0),              // 2: wise.protobuf.invoice.InvoiceAction
	(*InvoicePaymentType)(nil),      // 3: wise.protobuf.invoice.InvoicePaymentType
	(*LineItem)(nil),                // 4: wise.protobuf.invoice.LineItem
	(*AccountDetail)(nil),           // 5: wise.protobuf.invoice.AccountDetail
	(*InvoiceRequest)(nil),          // 6: wise.protobuf.invoice.InvoiceRequest
	(*Contact)(nil),                 // 7: wise.protobuf.invoice.Contact
	(*Business)(nil),                // 8: wise.protobuf.invoice.Business
	(*FullInvoice)(nil),             // 9: wise.protobuf.invoice.FullInvoice
	(*Payment)(nil),                 // 10: wise.protobuf.invoice.Payment
	(*InvoiceActivityRequest)(nil),  // 11: wise.protobuf.invoice.InvoiceActivityRequest
	(*InvoiceActivityResponse)(nil), // 12: wise.protobuf.invoice.InvoiceActivityResponse
	(*InvoiceActionRequest)(nil),    // 13: wise.protobuf.invoice.InvoiceActionRequest
	(*InvoiceActionResponse)(nil),   // 14: wise.protobuf.invoice.InvoiceActionResponse
	(golang.Boolean)(0),             // 15: wise.protobuf.Boolean
	(golang.ActorType)(0),           // 16: wise.protobuf.ActorType
	(*timestamp.Timestamp)(nil),     // 17: google.protobuf.Timestamp
	(*golang.Address)(nil),          // 18: wise.protobuf.Address
}
var file_invoice_invoice_request_proto_depIdxs = []int32{
	15, // 0: wise.protobuf.invoice.InvoicePaymentType.allow_cards:type_name -> wise.protobuf.Boolean
	15, // 1: wise.protobuf.invoice.InvoicePaymentType.allow_bank_transfer:type_name -> wise.protobuf.Boolean
	15, // 2: wise.protobuf.invoice.LineItem.is_taxable:type_name -> wise.protobuf.Boolean
	16, // 3: wise.protobuf.invoice.InvoiceRequest.actor_type:type_name -> wise.protobuf.ActorType
	15, // 4: wise.protobuf.invoice.InvoiceRequest.show_bank_account:type_name -> wise.protobuf.Boolean
	0,  // 5: wise.protobuf.invoice.InvoiceRequest.status:type_name -> wise.protobuf.invoice.InvoiceRequestStatus
	3,  // 6: wise.protobuf.invoice.InvoiceRequest.payment_types:type_name -> wise.protobuf.invoice.InvoicePaymentType
	4,  // 7: wise.protobuf.invoice.InvoiceRequest.line_items:type_name -> wise.protobuf.invoice.LineItem
	17, // 8: wise.protobuf.invoice.InvoiceRequest.created:type_name -> google.protobuf.Timestamp
	17, // 9: wise.protobuf.invoice.InvoiceRequest.modified:type_name -> google.protobuf.Timestamp
	7,  // 10: wise.protobuf.invoice.InvoiceRequest.contact_details:type_name -> wise.protobuf.invoice.Contact
	15, // 11: wise.protobuf.invoice.InvoiceRequest.notify_email:type_name -> wise.protobuf.Boolean
	18, // 12: wise.protobuf.invoice.Business.address:type_name -> wise.protobuf.Address
	16, // 13: wise.protobuf.invoice.FullInvoice.actor_type:type_name -> wise.protobuf.ActorType
	0,  // 14: wise.protobuf.invoice.FullInvoice.status:type_name -> wise.protobuf.invoice.InvoiceRequestStatus
	3,  // 15: wise.protobuf.invoice.FullInvoice.payment_types:type_name -> wise.protobuf.invoice.InvoicePaymentType
	4,  // 16: wise.protobuf.invoice.FullInvoice.line_items:type_name -> wise.protobuf.invoice.LineItem
	17, // 17: wise.protobuf.invoice.FullInvoice.created:type_name -> google.protobuf.Timestamp
	7,  // 18: wise.protobuf.invoice.FullInvoice.contact_details:type_name -> wise.protobuf.invoice.Contact
	10, // 19: wise.protobuf.invoice.FullInvoice.payment_info:type_name -> wise.protobuf.invoice.Payment
	15, // 20: wise.protobuf.invoice.FullInvoice.notify_email:type_name -> wise.protobuf.Boolean
	5,  // 21: wise.protobuf.invoice.FullInvoice.account_details:type_name -> wise.protobuf.invoice.AccountDetail
	8,  // 22: wise.protobuf.invoice.FullInvoice.business_detail:type_name -> wise.protobuf.invoice.Business
	17, // 23: wise.protobuf.invoice.FullInvoice.last_reminder_sent_date:type_name -> google.protobuf.Timestamp
	1,  // 24: wise.protobuf.invoice.Payment.payment_type:type_name -> wise.protobuf.invoice.PaymentMethod
	17, // 25: wise.protobuf.invoice.Payment.paid_date:type_name -> google.protobuf.Timestamp
	7,  // 26: wise.protobuf.invoice.InvoiceActivityResponse.last_sent_contacts:type_name -> wise.protobuf.invoice.Contact
	2,  // 27: wise.protobuf.invoice.InvoiceActionRequest.action:type_name -> wise.protobuf.invoice.InvoiceAction
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_invoice_invoice_request_proto_init() }
func file_invoice_invoice_request_proto_init() {
	if File_invoice_invoice_request_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_invoice_invoice_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoicePaymentType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Business); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullInvoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceActivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_invoice_request_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_invoice_invoice_request_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_invoice_invoice_request_proto_goTypes,
		DependencyIndexes: file_invoice_invoice_request_proto_depIdxs,
		EnumInfos:         file_invoice_invoice_request_proto_enumTypes,
		MessageInfos:      file_invoice_invoice_request_proto_msgTypes,
	}.Build()
	File_invoice_invoice_request_proto = out.File
	file_invoice_invoice_request_proto_rawDesc = nil
	file_invoice_invoice_request_proto_goTypes = nil
	file_invoice_invoice_request_proto_depIdxs = nil
}
