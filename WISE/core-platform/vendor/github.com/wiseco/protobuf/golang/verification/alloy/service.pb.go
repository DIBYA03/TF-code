// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: verification/alloy/service.proto

package alloy

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//Consumer encapsulates what we care about the consumer verfication results
type Consumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//consumer_id consumer id from the core db
	ConsumerId string `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	//request_status to indicate if request was processed or not
	RequestStatus string `protobuf:"bytes,2,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
	//outcome we got back from alloy
	Outcome string `protobuf:"bytes,3,opt,name=outcome,proto3" json:"outcome,omitempty"`
	//result_data raw result from alloy
	ResultData []byte `protobuf:"bytes,4,opt,name=result_data,json=resultData,proto3" json:"result_data,omitempty"`
}

func (x *Consumer) Reset() {
	*x = Consumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verification_alloy_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consumer) ProtoMessage() {}

func (x *Consumer) ProtoReflect() protoreflect.Message {
	mi := &file_verification_alloy_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consumer.ProtoReflect.Descriptor instead.
func (*Consumer) Descriptor() ([]byte, []int) {
	return file_verification_alloy_service_proto_rawDescGZIP(), []int{0}
}

func (x *Consumer) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *Consumer) GetRequestStatus() string {
	if x != nil {
		return x.RequestStatus
	}
	return ""
}

func (x *Consumer) GetOutcome() string {
	if x != nil {
		return x.Outcome
	}
	return ""
}

func (x *Consumer) GetResultData() []byte {
	if x != nil {
		return x.ResultData
	}
	return nil
}

//VerificationRequest a request sent to verify a consumer
type ConsumerVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//consumer_id consumer id from the core db
	ConsumerId string `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	//first_name first name of consumer
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	//last_name last name of consumer
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	//email email of consumer
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	//dob dob of consumer
	Dob string `protobuf:"bytes,5,opt,name=dob,proto3" json:"dob,omitempty"`
	//address_line_1 street address of consumer
	AddressLine_1 string `protobuf:"bytes,6,opt,name=address_line_1,json=addressLine1,proto3" json:"address_line_1,omitempty"`
	//city city of consumer
	City string `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	//state state of consumer
	State string `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	//postal_code postal code of consumer
	PostalCode string `protobuf:"bytes,9,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	//country country of consumer
	Country string `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	//ssn ssn of consumer
	Ssn string `protobuf:"bytes,11,opt,name=ssn,proto3" json:"ssn,omitempty"`
	// phone consumer phone number
	Phone string `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *ConsumerVerificationRequest) Reset() {
	*x = ConsumerVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verification_alloy_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumerVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerVerificationRequest) ProtoMessage() {}

func (x *ConsumerVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_verification_alloy_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerVerificationRequest.ProtoReflect.Descriptor instead.
func (*ConsumerVerificationRequest) Descriptor() ([]byte, []int) {
	return file_verification_alloy_service_proto_rawDescGZIP(), []int{1}
}

func (x *ConsumerVerificationRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetDob() string {
	if x != nil {
		return x.Dob
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetAddressLine_1() string {
	if x != nil {
		return x.AddressLine_1
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetSsn() string {
	if x != nil {
		return x.Ssn
	}
	return ""
}

func (x *ConsumerVerificationRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

//Business encapsulates what we care about the business verfication results
type Business struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//request_status to indicate if request was processed or not
	RequestStatus string `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
	//score we got back from alloy
	Score float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	//outcome we got back from alloy
	Outcome string `protobuf:"bytes,3,opt,name=outcome,proto3" json:"outcome,omitempty"`
	//result_data raw result from alloy
	ResultData []byte `protobuf:"bytes,4,opt,name=result_data,json=resultData,proto3" json:"result_data,omitempty"`
}

func (x *Business) Reset() {
	*x = Business{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verification_alloy_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Business) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Business) ProtoMessage() {}

func (x *Business) ProtoReflect() protoreflect.Message {
	mi := &file_verification_alloy_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Business.ProtoReflect.Descriptor instead.
func (*Business) Descriptor() ([]byte, []int) {
	return file_verification_alloy_service_proto_rawDescGZIP(), []int{2}
}

func (x *Business) GetRequestStatus() string {
	if x != nil {
		return x.RequestStatus
	}
	return ""
}

func (x *Business) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Business) GetOutcome() string {
	if x != nil {
		return x.Outcome
	}
	return ""
}

func (x *Business) GetResultData() []byte {
	if x != nil {
		return x.ResultData
	}
	return nil
}

//VerificationRequest a request sent to verify a consumer
type BusinessVerificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//name name of business
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//address_line_1 street address of business
	AddressLine_1 string `protobuf:"bytes,2,opt,name=address_line_1,json=addressLine1,proto3" json:"address_line_1,omitempty"`
	//city city of business
	City string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	//state state of business
	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	//postal_code postal code of business
	PostalCode string `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	//country country of business
	Country string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	//ssn ssn of business
	Tin string `protobuf:"bytes,7,opt,name=tin,proto3" json:"tin,omitempty"`
	// phone business phone number
	Phone string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *BusinessVerificationRequest) Reset() {
	*x = BusinessVerificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verification_alloy_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessVerificationRequest) ProtoMessage() {}

func (x *BusinessVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_verification_alloy_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessVerificationRequest.ProtoReflect.Descriptor instead.
func (*BusinessVerificationRequest) Descriptor() ([]byte, []int) {
	return file_verification_alloy_service_proto_rawDescGZIP(), []int{3}
}

func (x *BusinessVerificationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BusinessVerificationRequest) GetAddressLine_1() string {
	if x != nil {
		return x.AddressLine_1
	}
	return ""
}

func (x *BusinessVerificationRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *BusinessVerificationRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *BusinessVerificationRequest) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *BusinessVerificationRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *BusinessVerificationRequest) GetTin() string {
	if x != nil {
		return x.Tin
	}
	return ""
}

func (x *BusinessVerificationRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetConsumerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//consumer_id consumer id from the core db
	ConsumerId string `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
}

func (x *GetConsumerRequest) Reset() {
	*x = GetConsumerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verification_alloy_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsumerRequest) ProtoMessage() {}

func (x *GetConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_verification_alloy_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsumerRequest.ProtoReflect.Descriptor instead.
func (*GetConsumerRequest) Descriptor() ([]byte, []int) {
	return file_verification_alloy_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetConsumerRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

var File_verification_alloy_service_proto protoreflect.FileDescriptor

var file_verification_alloy_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61,
	0x6c, 0x6c, 0x6f, 0x79, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x20, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61,
	0x6c, 0x6c, 0x6f, 0x79, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x22, 0xd5, 0x02, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x62, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x62, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x73, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x82, 0x01, 0x0a,
	0x08, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xe4, 0x01, 0x0a, 0x1b, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x32,
	0x87, 0x03, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x81, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x79, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x12, 0x6f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x12, 0x34, 0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x69, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x79, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d,
	0x2e, 0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f,
	0x79, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x77, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x6c, 0x6c, 0x6f, 0x79,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x6c, 0x6c, 0x6f,
	0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_verification_alloy_service_proto_rawDescOnce sync.Once
	file_verification_alloy_service_proto_rawDescData = file_verification_alloy_service_proto_rawDesc
)

func file_verification_alloy_service_proto_rawDescGZIP() []byte {
	file_verification_alloy_service_proto_rawDescOnce.Do(func() {
		file_verification_alloy_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_verification_alloy_service_proto_rawDescData)
	})
	return file_verification_alloy_service_proto_rawDescData
}

var file_verification_alloy_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_verification_alloy_service_proto_goTypes = []interface{}{
	(*Consumer)(nil),                    // 0: wise.protobuf.verification.alloy.Consumer
	(*ConsumerVerificationRequest)(nil), // 1: wise.protobuf.verification.alloy.ConsumerVerificationRequest
	(*Business)(nil),                    // 2: wise.protobuf.verification.alloy.Business
	(*BusinessVerificationRequest)(nil), // 3: wise.protobuf.verification.alloy.BusinessVerificationRequest
	(*GetConsumerRequest)(nil),          // 4: wise.protobuf.verification.alloy.GetConsumerRequest
}
var file_verification_alloy_service_proto_depIdxs = []int32{
	1, // 0: wise.protobuf.verification.alloy.AlloyService.ConsumerVerification:input_type -> wise.protobuf.verification.alloy.ConsumerVerificationRequest
	4, // 1: wise.protobuf.verification.alloy.AlloyService.GetConsumer:input_type -> wise.protobuf.verification.alloy.GetConsumerRequest
	3, // 2: wise.protobuf.verification.alloy.AlloyService.BusinessVerification:input_type -> wise.protobuf.verification.alloy.BusinessVerificationRequest
	0, // 3: wise.protobuf.verification.alloy.AlloyService.ConsumerVerification:output_type -> wise.protobuf.verification.alloy.Consumer
	0, // 4: wise.protobuf.verification.alloy.AlloyService.GetConsumer:output_type -> wise.protobuf.verification.alloy.Consumer
	2, // 5: wise.protobuf.verification.alloy.AlloyService.BusinessVerification:output_type -> wise.protobuf.verification.alloy.Business
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_verification_alloy_service_proto_init() }
func file_verification_alloy_service_proto_init() {
	if File_verification_alloy_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_verification_alloy_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verification_alloy_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumerVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verification_alloy_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Business); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verification_alloy_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessVerificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verification_alloy_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConsumerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_verification_alloy_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_verification_alloy_service_proto_goTypes,
		DependencyIndexes: file_verification_alloy_service_proto_depIdxs,
		MessageInfos:      file_verification_alloy_service_proto_msgTypes,
	}.Build()
	File_verification_alloy_service_proto = out.File
	file_verification_alloy_service_proto_rawDesc = nil
	file_verification_alloy_service_proto_goTypes = nil
	file_verification_alloy_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AlloyServiceClient is the client API for AlloyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlloyServiceClient interface {
	// ConsumerVerification attempts to get and store consumer verification results
	ConsumerVerification(ctx context.Context, in *ConsumerVerificationRequest, opts ...grpc.CallOption) (*Consumer, error)
	// GetConsumer returns relevant consumer verification results
	GetConsumer(ctx context.Context, in *GetConsumerRequest, opts ...grpc.CallOption) (*Consumer, error)
	// BusinessVerification attempts to get business verification results
	BusinessVerification(ctx context.Context, in *BusinessVerificationRequest, opts ...grpc.CallOption) (*Business, error)
}

type alloyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAlloyServiceClient(cc grpc.ClientConnInterface) AlloyServiceClient {
	return &alloyServiceClient{cc}
}

func (c *alloyServiceClient) ConsumerVerification(ctx context.Context, in *ConsumerVerificationRequest, opts ...grpc.CallOption) (*Consumer, error) {
	out := new(Consumer)
	err := c.cc.Invoke(ctx, "/wise.protobuf.verification.alloy.AlloyService/ConsumerVerification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alloyServiceClient) GetConsumer(ctx context.Context, in *GetConsumerRequest, opts ...grpc.CallOption) (*Consumer, error) {
	out := new(Consumer)
	err := c.cc.Invoke(ctx, "/wise.protobuf.verification.alloy.AlloyService/GetConsumer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alloyServiceClient) BusinessVerification(ctx context.Context, in *BusinessVerificationRequest, opts ...grpc.CallOption) (*Business, error) {
	out := new(Business)
	err := c.cc.Invoke(ctx, "/wise.protobuf.verification.alloy.AlloyService/BusinessVerification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AlloyServiceServer is the server API for AlloyService service.
type AlloyServiceServer interface {
	// ConsumerVerification attempts to get and store consumer verification results
	ConsumerVerification(context.Context, *ConsumerVerificationRequest) (*Consumer, error)
	// GetConsumer returns relevant consumer verification results
	GetConsumer(context.Context, *GetConsumerRequest) (*Consumer, error)
	// BusinessVerification attempts to get business verification results
	BusinessVerification(context.Context, *BusinessVerificationRequest) (*Business, error)
}

// UnimplementedAlloyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAlloyServiceServer struct {
}

func (*UnimplementedAlloyServiceServer) ConsumerVerification(context.Context, *ConsumerVerificationRequest) (*Consumer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConsumerVerification not implemented")
}
func (*UnimplementedAlloyServiceServer) GetConsumer(context.Context, *GetConsumerRequest) (*Consumer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConsumer not implemented")
}
func (*UnimplementedAlloyServiceServer) BusinessVerification(context.Context, *BusinessVerificationRequest) (*Business, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BusinessVerification not implemented")
}

func RegisterAlloyServiceServer(s *grpc.Server, srv AlloyServiceServer) {
	s.RegisterService(&_AlloyService_serviceDesc, srv)
}

func _AlloyService_ConsumerVerification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsumerVerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlloyServiceServer).ConsumerVerification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.verification.alloy.AlloyService/ConsumerVerification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlloyServiceServer).ConsumerVerification(ctx, req.(*ConsumerVerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlloyService_GetConsumer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConsumerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlloyServiceServer).GetConsumer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.verification.alloy.AlloyService/GetConsumer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlloyServiceServer).GetConsumer(ctx, req.(*GetConsumerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlloyService_BusinessVerification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BusinessVerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlloyServiceServer).BusinessVerification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wise.protobuf.verification.alloy.AlloyService/BusinessVerification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlloyServiceServer).BusinessVerification(ctx, req.(*BusinessVerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlloyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wise.protobuf.verification.alloy.AlloyService",
	HandlerType: (*AlloyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConsumerVerification",
			Handler:    _AlloyService_ConsumerVerification_Handler,
		},
		{
			MethodName: "GetConsumer",
			Handler:    _AlloyService_GetConsumer_Handler,
		},
		{
			MethodName: "BusinessVerification",
			Handler:    _AlloyService_BusinessVerification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "verification/alloy/service.proto",
}
